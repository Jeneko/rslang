(()=>{var __webpack_modules__={492:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"afterMain\": () => (/* reexport */ afterMain),\n  \"afterRead\": () => (/* reexport */ afterRead),\n  \"afterWrite\": () => (/* reexport */ afterWrite),\n  \"applyStyles\": () => (/* reexport */ modifiers_applyStyles),\n  \"arrow\": () => (/* reexport */ modifiers_arrow),\n  \"auto\": () => (/* reexport */ auto),\n  \"basePlacements\": () => (/* reexport */ basePlacements),\n  \"beforeMain\": () => (/* reexport */ beforeMain),\n  \"beforeRead\": () => (/* reexport */ beforeRead),\n  \"beforeWrite\": () => (/* reexport */ beforeWrite),\n  \"bottom\": () => (/* reexport */ bottom),\n  \"clippingParents\": () => (/* reexport */ clippingParents),\n  \"computeStyles\": () => (/* reexport */ modifiers_computeStyles),\n  \"createPopper\": () => (/* reexport */ popper_createPopper),\n  \"createPopperBase\": () => (/* reexport */ createPopper),\n  \"createPopperLite\": () => (/* reexport */ popper_lite_createPopper),\n  \"detectOverflow\": () => (/* reexport */ detectOverflow),\n  \"end\": () => (/* reexport */ end),\n  \"eventListeners\": () => (/* reexport */ eventListeners),\n  \"flip\": () => (/* reexport */ modifiers_flip),\n  \"hide\": () => (/* reexport */ modifiers_hide),\n  \"left\": () => (/* reexport */ left),\n  \"main\": () => (/* reexport */ main),\n  \"modifierPhases\": () => (/* reexport */ modifierPhases),\n  \"offset\": () => (/* reexport */ modifiers_offset),\n  \"placements\": () => (/* reexport */ enums_placements),\n  \"popper\": () => (/* reexport */ popper),\n  \"popperGenerator\": () => (/* reexport */ popperGenerator),\n  \"popperOffsets\": () => (/* reexport */ modifiers_popperOffsets),\n  \"preventOverflow\": () => (/* reexport */ modifiers_preventOverflow),\n  \"read\": () => (/* reexport */ read),\n  \"reference\": () => (/* reexport */ reference),\n  \"right\": () => (/* reexport */ right),\n  \"start\": () => (/* reexport */ start),\n  \"top\": () => (/* reexport */ enums_top),\n  \"variationPlacements\": () => (/* reexport */ variationPlacements),\n  \"viewport\": () => (/* reexport */ viewport),\n  \"write\": () => (/* reexport */ write)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js\nvar enums_top = 'top';\nvar bottom = 'bottom';\nvar right = 'right';\nvar left = 'left';\nvar auto = 'auto';\nvar basePlacements = [enums_top, bottom, right, left];\nvar start = 'start';\nvar end = 'end';\nvar clippingParents = 'clippingParents';\nvar viewport = 'viewport';\nvar popper = 'popper';\nvar reference = 'reference';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nvar enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = 'beforeRead';\nvar read = 'read';\nvar afterRead = 'afterRead'; // pure-logic modifiers\n\nvar beforeMain = 'beforeMain';\nvar main = 'main';\nvar afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = 'beforeWrite';\nvar write = 'write';\nvar afterWrite = 'afterWrite';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\nfunction getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\n\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\n\n // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_applyStyles = ({\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\n\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/math.js\nvar math_max = Math.max;\nvar math_min = Math.min;\nvar round = Math.round;\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/userAgent.js\nfunction getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js\n\nfunction isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\n\n\n\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\n // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nfunction getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\n\n\n\nfunction getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\n\n\n\n\n\n\n\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js\n\nfunction within(min, value, max) {\n  return math_max(min, math_min(value, max));\n}\nfunction withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js\n\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? enums_top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction arrow_effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (false) {}\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (false) {}\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_arrow = ({\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: arrow_effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js\nfunction getVariation(placement) {\n  return placement.split('-')[1];\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = enums_top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === enums_top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === enums_top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (false) { var transitionProperty; }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_computeStyles = ({\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\n // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction eventListeners_effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const eventListeners = ({\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: eventListeners_effect,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js\nvar hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js\nvar getOppositeVariationPlacement_hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return getOppositeVariationPlacement_hash[matched];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\n\nfunction getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\n\n\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js\n\n\n\n\nfunction getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js\n\n\n\n\n // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js\n\n\n\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js\n\n\n\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nfunction listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js\nfunction rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = math_max(rect.top, accRect.top);\n    accRect.right = math_min(rect.right, accRect.right);\n    accRect.bottom = math_min(rect.bottom, accRect.bottom);\n    accRect.left = math_max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js\n\n\n\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case enums_top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [enums_top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js\n\n\n\n\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (false) {}\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_flip = ({\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js\n\n\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [enums_top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_hide = ({\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = enums_placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_offset = ({\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\n\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_popperOffsets = ({\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js\nfunction getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? enums_top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? enums_top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [enums_top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_preventOverflow = ({\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/index.js\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js\n\n\n\n\nfunction getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js\n\n\n\n\n\n\n\n\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js\n // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js\nfunction debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/createPopper.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (false) { var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers; }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (false) {}\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (false) {}\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (false) {}\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nvar createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js\n\n\n\n\n\n\n\n\n\n\nvar defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];\nvar popper_createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper-lite.js\n\n\n\n\n\nvar popper_lite_defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles];\nvar popper_lite_createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: popper_lite_defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/index.js\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n\n//# sourceURL=webpack://team-51-rslang/./node_modules/@popperjs/core/lib/index.js_+_56_modules?")},666:function(module,__unused_webpack_exports,__webpack_require__){eval('/*!\n  * Bootstrap v5.2.0 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n!function(t,e){ true?module.exports=e(__webpack_require__(492)):0}(this,(function(t){"use strict";function e(t){if(t&&t.__esModule)return t;const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t)for(const i in t)if("default"!==i){const s=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,s.get?s:{enumerable:!0,get:()=>t[i]})}return e.default=t,Object.freeze(e)}const i=e(t),s="transitionend",n=t=>{let e=t.getAttribute("data-bs-target");if(!e||"#"===e){let i=t.getAttribute("href");if(!i||!i.includes("#")&&!i.startsWith("."))return null;i.includes("#")&&!i.startsWith("#")&&(i=`#${i.split("#")[1]}`),e=i&&"#"!==i?i.trim():null}return e},o=t=>{const e=n(t);return e&&document.querySelector(e)?e:null},r=t=>{const e=n(t);return e?document.querySelector(e):null},a=t=>{t.dispatchEvent(new Event(s))},l=t=>!(!t||"object"!=typeof t)&&(void 0!==t.jquery&&(t=t[0]),void 0!==t.nodeType),c=t=>l(t)?t.jquery?t[0]:t:"string"==typeof t&&t.length>0?document.querySelector(t):null,h=t=>{if(!l(t)||0===t.getClientRects().length)return!1;const e="visible"===getComputedStyle(t).getPropertyValue("visibility"),i=t.closest("details:not([open])");if(!i)return e;if(i!==t){const e=t.closest("summary");if(e&&e.parentNode!==i)return!1;if(null===e)return!1}return e},d=t=>!t||t.nodeType!==Node.ELEMENT_NODE||!!t.classList.contains("disabled")||(void 0!==t.disabled?t.disabled:t.hasAttribute("disabled")&&"false"!==t.getAttribute("disabled")),u=t=>{if(!document.documentElement.attachShadow)return null;if("function"==typeof t.getRootNode){const e=t.getRootNode();return e instanceof ShadowRoot?e:null}return t instanceof ShadowRoot?t:t.parentNode?u(t.parentNode):null},_=()=>{},g=t=>{t.offsetHeight},f=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,p=[],m=()=>"rtl"===document.documentElement.dir,b=t=>{var e;e=()=>{const e=f();if(e){const i=t.NAME,s=e.fn[i];e.fn[i]=t.jQueryInterface,e.fn[i].Constructor=t,e.fn[i].noConflict=()=>(e.fn[i]=s,t.jQueryInterface)}},"loading"===document.readyState?(p.length||document.addEventListener("DOMContentLoaded",(()=>{for(const t of p)t()})),p.push(e)):e()},v=t=>{"function"==typeof t&&t()},y=(t,e,i=!0)=>{if(!i)return void v(t);const n=(t=>{if(!t)return 0;let{transitionDuration:e,transitionDelay:i}=window.getComputedStyle(t);const s=Number.parseFloat(e),n=Number.parseFloat(i);return s||n?(e=e.split(",")[0],i=i.split(",")[0],1e3*(Number.parseFloat(e)+Number.parseFloat(i))):0})(e)+5;let o=!1;const r=({target:i})=>{i===e&&(o=!0,e.removeEventListener(s,r),v(t))};e.addEventListener(s,r),setTimeout((()=>{o||a(e)}),n)},w=(t,e,i,s)=>{const n=t.length;let o=t.indexOf(e);return-1===o?!i&&s?t[n-1]:t[0]:(o+=i?1:-1,s&&(o=(o+n)%n),t[Math.max(0,Math.min(o,n-1))])},A=/[^.]*(?=\\..*)\\.|.*/,T=/\\..*/,E=/::\\d+$/,C={};let k=1;const L={mouseenter:"mouseover",mouseleave:"mouseout"},O=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function I(t,e){return e&&`${e}::${k++}`||t.uidEvent||k++}function S(t){const e=I(t);return t.uidEvent=e,C[e]=C[e]||{},C[e]}function D(t,e,i=null){return Object.values(t).find((t=>t.callable===e&&t.delegationSelector===i))}function N(t,e,i){const s="string"==typeof e,n=s?i:e||i;let o=j(t);return O.has(o)||(o=t),[s,n,o]}function P(t,e,i,s,n){if("string"!=typeof e||!t)return;let[o,r,a]=N(e,i,s);if(e in L){const t=t=>function(e){if(!e.relatedTarget||e.relatedTarget!==e.delegateTarget&&!e.delegateTarget.contains(e.relatedTarget))return t.call(this,e)};r=t(r)}const l=S(t),c=l[a]||(l[a]={}),h=D(c,r,o?i:null);if(h)return void(h.oneOff=h.oneOff&&n);const d=I(r,e.replace(A,"")),u=o?function(t,e,i){return function s(n){const o=t.querySelectorAll(e);for(let{target:r}=n;r&&r!==this;r=r.parentNode)for(const a of o)if(a===r)return F(n,{delegateTarget:r}),s.oneOff&&$.off(t,n.type,e,i),i.apply(r,[n])}}(t,i,r):function(t,e){return function i(s){return F(s,{delegateTarget:t}),i.oneOff&&$.off(t,s.type,e),e.apply(t,[s])}}(t,r);u.delegationSelector=o?i:null,u.callable=r,u.oneOff=n,u.uidEvent=d,c[d]=u,t.addEventListener(a,u,o)}function x(t,e,i,s,n){const o=D(e[i],s,n);o&&(t.removeEventListener(i,o,Boolean(n)),delete e[i][o.uidEvent])}function M(t,e,i,s){const n=e[i]||{};for(const o of Object.keys(n))if(o.includes(s)){const s=n[o];x(t,e,i,s.callable,s.delegationSelector)}}function j(t){return t=t.replace(T,""),L[t]||t}const $={on(t,e,i,s){P(t,e,i,s,!1)},one(t,e,i,s){P(t,e,i,s,!0)},off(t,e,i,s){if("string"!=typeof e||!t)return;const[n,o,r]=N(e,i,s),a=r!==e,l=S(t),c=l[r]||{},h=e.startsWith(".");if(void 0===o){if(h)for(const i of Object.keys(l))M(t,l,i,e.slice(1));for(const i of Object.keys(c)){const s=i.replace(E,"");if(!a||e.includes(s)){const e=c[i];x(t,l,r,e.callable,e.delegationSelector)}}}else{if(!Object.keys(c).length)return;x(t,l,r,o,n?i:null)}},trigger(t,e,i){if("string"!=typeof e||!t)return null;const s=f();let n=null,o=!0,r=!0,a=!1;e!==j(e)&&s&&(n=s.Event(e,i),s(t).trigger(n),o=!n.isPropagationStopped(),r=!n.isImmediatePropagationStopped(),a=n.isDefaultPrevented());let l=new Event(e,{bubbles:o,cancelable:!0});return l=F(l,i),a&&l.preventDefault(),r&&t.dispatchEvent(l),l.defaultPrevented&&n&&n.preventDefault(),l}};function F(t,e){for(const[i,s]of Object.entries(e||{}))try{t[i]=s}catch(e){Object.defineProperty(t,i,{configurable:!0,get:()=>s})}return t}const z=new Map,H={set(t,e,i){z.has(t)||z.set(t,new Map);const s=z.get(t);s.has(e)||0===s.size?s.set(e,i):console.error(`Bootstrap doesn\'t allow more than one instance per element. Bound instance: ${Array.from(s.keys())[0]}.`)},get:(t,e)=>z.has(t)&&z.get(t).get(e)||null,remove(t,e){if(!z.has(t))return;const i=z.get(t);i.delete(e),0===i.size&&z.delete(t)}};function q(t){if("true"===t)return!0;if("false"===t)return!1;if(t===Number(t).toString())return Number(t);if(""===t||"null"===t)return null;if("string"!=typeof t)return t;try{return JSON.parse(decodeURIComponent(t))}catch(e){return t}}function B(t){return t.replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`))}const W={setDataAttribute(t,e,i){t.setAttribute(`data-bs-${B(e)}`,i)},removeDataAttribute(t,e){t.removeAttribute(`data-bs-${B(e)}`)},getDataAttributes(t){if(!t)return{};const e={},i=Object.keys(t.dataset).filter((t=>t.startsWith("bs")&&!t.startsWith("bsConfig")));for(const s of i){let i=s.replace(/^bs/,"");i=i.charAt(0).toLowerCase()+i.slice(1,i.length),e[i]=q(t.dataset[s])}return e},getDataAttribute:(t,e)=>q(t.getAttribute(`data-bs-${B(e)}`))};class R{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error(\'You have to implement the static method "NAME", for each component!\')}_getConfig(t){return t=this._mergeConfigObj(t),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}_configAfterMerge(t){return t}_mergeConfigObj(t,e){const i=l(e)?W.getDataAttribute(e,"config"):{};return{...this.constructor.Default,..."object"==typeof i?i:{},...l(e)?W.getDataAttributes(e):{},..."object"==typeof t?t:{}}}_typeCheckConfig(t,e=this.constructor.DefaultType){for(const s of Object.keys(e)){const n=e[s],o=t[s],r=l(o)?"element":null==(i=o)?`${i}`:Object.prototype.toString.call(i).match(/\\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(n).test(r))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${s}" provided type "${r}" but expected type "${n}".`)}var i}}class V extends R{constructor(t,e){super(),(t=c(t))&&(this._element=t,this._config=this._getConfig(e),H.set(this._element,this.constructor.DATA_KEY,this))}dispose(){H.remove(this._element,this.constructor.DATA_KEY),$.off(this._element,this.constructor.EVENT_KEY);for(const t of Object.getOwnPropertyNames(this))this[t]=null}_queueCallback(t,e,i=!0){y(t,e,i)}_getConfig(t){return t=this._mergeConfigObj(t,this._element),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}static getInstance(t){return H.get(c(t),this.DATA_KEY)}static getOrCreateInstance(t,e={}){return this.getInstance(t)||new this(t,"object"==typeof e?e:null)}static get VERSION(){return"5.2.0"}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(t){return`${t}${this.EVENT_KEY}`}}const K=(t,e="hide")=>{const i=`click.dismiss${t.EVENT_KEY}`,s=t.NAME;$.on(document,i,`[data-bs-dismiss="${s}"]`,(function(i){if(["A","AREA"].includes(this.tagName)&&i.preventDefault(),d(this))return;const n=r(this)||this.closest(`.${s}`);t.getOrCreateInstance(n)[e]()}))};class Q extends V{static get NAME(){return"alert"}close(){if($.trigger(this._element,"close.bs.alert").defaultPrevented)return;this._element.classList.remove("show");const t=this._element.classList.contains("fade");this._queueCallback((()=>this._destroyElement()),this._element,t)}_destroyElement(){this._element.remove(),$.trigger(this._element,"closed.bs.alert"),this.dispose()}static jQueryInterface(t){return this.each((function(){const e=Q.getOrCreateInstance(this);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}K(Q,"close"),b(Q);const X=\'[data-bs-toggle="button"]\';class Y extends V{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(t){return this.each((function(){const e=Y.getOrCreateInstance(this);"toggle"===t&&e[t]()}))}}$.on(document,"click.bs.button.data-api",X,(t=>{t.preventDefault();const e=t.target.closest(X);Y.getOrCreateInstance(e).toggle()})),b(Y);const U={find:(t,e=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(e,t)),findOne:(t,e=document.documentElement)=>Element.prototype.querySelector.call(e,t),children:(t,e)=>[].concat(...t.children).filter((t=>t.matches(e))),parents(t,e){const i=[];let s=t.parentNode.closest(e);for(;s;)i.push(s),s=s.parentNode.closest(e);return i},prev(t,e){let i=t.previousElementSibling;for(;i;){if(i.matches(e))return[i];i=i.previousElementSibling}return[]},next(t,e){let i=t.nextElementSibling;for(;i;){if(i.matches(e))return[i];i=i.nextElementSibling}return[]},focusableChildren(t){const e=["a","button","input","textarea","select","details","[tabindex]",\'[contenteditable="true"]\'].map((t=>`${t}:not([tabindex^="-"])`)).join(",");return this.find(e,t).filter((t=>!d(t)&&h(t)))}},G={endCallback:null,leftCallback:null,rightCallback:null},J={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class Z extends R{constructor(t,e){super(),this._element=t,t&&Z.isSupported()&&(this._config=this._getConfig(e),this._deltaX=0,this._supportPointerEvents=Boolean(window.PointerEvent),this._initEvents())}static get Default(){return G}static get DefaultType(){return J}static get NAME(){return"swipe"}dispose(){$.off(this._element,".bs.swipe")}_start(t){this._supportPointerEvents?this._eventIsPointerPenTouch(t)&&(this._deltaX=t.clientX):this._deltaX=t.touches[0].clientX}_end(t){this._eventIsPointerPenTouch(t)&&(this._deltaX=t.clientX-this._deltaX),this._handleSwipe(),v(this._config.endCallback)}_move(t){this._deltaX=t.touches&&t.touches.length>1?0:t.touches[0].clientX-this._deltaX}_handleSwipe(){const t=Math.abs(this._deltaX);if(t<=40)return;const e=t/this._deltaX;this._deltaX=0,e&&v(e>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?($.on(this._element,"pointerdown.bs.swipe",(t=>this._start(t))),$.on(this._element,"pointerup.bs.swipe",(t=>this._end(t))),this._element.classList.add("pointer-event")):($.on(this._element,"touchstart.bs.swipe",(t=>this._start(t))),$.on(this._element,"touchmove.bs.swipe",(t=>this._move(t))),$.on(this._element,"touchend.bs.swipe",(t=>this._end(t))))}_eventIsPointerPenTouch(t){return this._supportPointerEvents&&("pen"===t.pointerType||"touch"===t.pointerType)}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const tt="next",et="prev",it="left",st="right",nt="slid.bs.carousel",ot="carousel",rt="active",at={ArrowLeft:st,ArrowRight:it},lt={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},ct={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class ht extends V{constructor(t,e){super(t,e),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=U.findOne(".carousel-indicators",this._element),this._addEventListeners(),this._config.ride===ot&&this.cycle()}static get Default(){return lt}static get DefaultType(){return ct}static get NAME(){return"carousel"}next(){this._slide(tt)}nextWhenVisible(){!document.hidden&&h(this._element)&&this.next()}prev(){this._slide(et)}pause(){this._isSliding&&a(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval((()=>this.nextWhenVisible()),this._config.interval)}_maybeEnableCycle(){this._config.ride&&(this._isSliding?$.one(this._element,nt,(()=>this.cycle())):this.cycle())}to(t){const e=this._getItems();if(t>e.length-1||t<0)return;if(this._isSliding)return void $.one(this._element,nt,(()=>this.to(t)));const i=this._getItemIndex(this._getActive());if(i===t)return;const s=t>i?tt:et;this._slide(s,e[t])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(t){return t.defaultInterval=t.interval,t}_addEventListeners(){this._config.keyboard&&$.on(this._element,"keydown.bs.carousel",(t=>this._keydown(t))),"hover"===this._config.pause&&($.on(this._element,"mouseenter.bs.carousel",(()=>this.pause())),$.on(this._element,"mouseleave.bs.carousel",(()=>this._maybeEnableCycle()))),this._config.touch&&Z.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const t of U.find(".carousel-item img",this._element))$.on(t,"dragstart.bs.carousel",(t=>t.preventDefault()));const t={leftCallback:()=>this._slide(this._directionToOrder(it)),rightCallback:()=>this._slide(this._directionToOrder(st)),endCallback:()=>{"hover"===this._config.pause&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout((()=>this._maybeEnableCycle()),500+this._config.interval))}};this._swipeHelper=new Z(this._element,t)}_keydown(t){if(/input|textarea/i.test(t.target.tagName))return;const e=at[t.key];e&&(t.preventDefault(),this._slide(this._directionToOrder(e)))}_getItemIndex(t){return this._getItems().indexOf(t)}_setActiveIndicatorElement(t){if(!this._indicatorsElement)return;const e=U.findOne(".active",this._indicatorsElement);e.classList.remove(rt),e.removeAttribute("aria-current");const i=U.findOne(`[data-bs-slide-to="${t}"]`,this._indicatorsElement);i&&(i.classList.add(rt),i.setAttribute("aria-current","true"))}_updateInterval(){const t=this._activeElement||this._getActive();if(!t)return;const e=Number.parseInt(t.getAttribute("data-bs-interval"),10);this._config.interval=e||this._config.defaultInterval}_slide(t,e=null){if(this._isSliding)return;const i=this._getActive(),s=t===tt,n=e||w(this._getItems(),i,s,this._config.wrap);if(n===i)return;const o=this._getItemIndex(n),r=e=>$.trigger(this._element,e,{relatedTarget:n,direction:this._orderToDirection(t),from:this._getItemIndex(i),to:o});if(r("slide.bs.carousel").defaultPrevented)return;if(!i||!n)return;const a=Boolean(this._interval);this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(o),this._activeElement=n;const l=s?"carousel-item-start":"carousel-item-end",c=s?"carousel-item-next":"carousel-item-prev";n.classList.add(c),g(n),i.classList.add(l),n.classList.add(l),this._queueCallback((()=>{n.classList.remove(l,c),n.classList.add(rt),i.classList.remove(rt,c,l),this._isSliding=!1,r(nt)}),i,this._isAnimated()),a&&this.cycle()}_isAnimated(){return this._element.classList.contains("slide")}_getActive(){return U.findOne(".active.carousel-item",this._element)}_getItems(){return U.find(".carousel-item",this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(t){return m()?t===it?et:tt:t===it?tt:et}_orderToDirection(t){return m()?t===et?it:st:t===et?st:it}static jQueryInterface(t){return this.each((function(){const e=ht.getOrCreateInstance(this,t);if("number"!=typeof t){if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t]()}}else e.to(t)}))}}$.on(document,"click.bs.carousel.data-api","[data-bs-slide], [data-bs-slide-to]",(function(t){const e=r(this);if(!e||!e.classList.contains(ot))return;t.preventDefault();const i=ht.getOrCreateInstance(e),s=this.getAttribute("data-bs-slide-to");return s?(i.to(s),void i._maybeEnableCycle()):"next"===W.getDataAttribute(this,"slide")?(i.next(),void i._maybeEnableCycle()):(i.prev(),void i._maybeEnableCycle())})),$.on(window,"load.bs.carousel.data-api",(()=>{const t=U.find(\'[data-bs-ride="carousel"]\');for(const e of t)ht.getOrCreateInstance(e)})),b(ht);const dt="show",ut="collapse",_t="collapsing",gt=\'[data-bs-toggle="collapse"]\',ft={parent:null,toggle:!0},pt={parent:"(null|element)",toggle:"boolean"};class mt extends V{constructor(t,e){super(t,e),this._isTransitioning=!1,this._triggerArray=[];const i=U.find(gt);for(const t of i){const e=o(t),i=U.find(e).filter((t=>t===this._element));null!==e&&i.length&&this._triggerArray.push(t)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return ft}static get DefaultType(){return pt}static get NAME(){return"collapse"}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let t=[];if(this._config.parent&&(t=this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter((t=>t!==this._element)).map((t=>mt.getOrCreateInstance(t,{toggle:!1})))),t.length&&t[0]._isTransitioning)return;if($.trigger(this._element,"show.bs.collapse").defaultPrevented)return;for(const e of t)e.hide();const e=this._getDimension();this._element.classList.remove(ut),this._element.classList.add(_t),this._element.style[e]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const i=`scroll${e[0].toUpperCase()+e.slice(1)}`;this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(_t),this._element.classList.add(ut,dt),this._element.style[e]="",$.trigger(this._element,"shown.bs.collapse")}),this._element,!0),this._element.style[e]=`${this._element[i]}px`}hide(){if(this._isTransitioning||!this._isShown())return;if($.trigger(this._element,"hide.bs.collapse").defaultPrevented)return;const t=this._getDimension();this._element.style[t]=`${this._element.getBoundingClientRect()[t]}px`,g(this._element),this._element.classList.add(_t),this._element.classList.remove(ut,dt);for(const t of this._triggerArray){const e=r(t);e&&!this._isShown(e)&&this._addAriaAndCollapsedClass([t],!1)}this._isTransitioning=!0,this._element.style[t]="",this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(_t),this._element.classList.add(ut),$.trigger(this._element,"hidden.bs.collapse")}),this._element,!0)}_isShown(t=this._element){return t.classList.contains(dt)}_configAfterMerge(t){return t.toggle=Boolean(t.toggle),t.parent=c(t.parent),t}_getDimension(){return this._element.classList.contains("collapse-horizontal")?"width":"height"}_initializeChildren(){if(!this._config.parent)return;const t=this._getFirstLevelChildren(gt);for(const e of t){const t=r(e);t&&this._addAriaAndCollapsedClass([e],this._isShown(t))}}_getFirstLevelChildren(t){const e=U.find(":scope .collapse .collapse",this._config.parent);return U.find(t,this._config.parent).filter((t=>!e.includes(t)))}_addAriaAndCollapsedClass(t,e){if(t.length)for(const i of t)i.classList.toggle("collapsed",!e),i.setAttribute("aria-expanded",e)}static jQueryInterface(t){const e={};return"string"==typeof t&&/show|hide/.test(t)&&(e.toggle=!1),this.each((function(){const i=mt.getOrCreateInstance(this,e);if("string"==typeof t){if(void 0===i[t])throw new TypeError(`No method named "${t}"`);i[t]()}}))}}$.on(document,"click.bs.collapse.data-api",gt,(function(t){("A"===t.target.tagName||t.delegateTarget&&"A"===t.delegateTarget.tagName)&&t.preventDefault();const e=o(this),i=U.find(e);for(const t of i)mt.getOrCreateInstance(t,{toggle:!1}).toggle()})),b(mt);const bt="dropdown",vt="ArrowUp",yt="ArrowDown",wt="click.bs.dropdown.data-api",At="keydown.bs.dropdown.data-api",Tt="show",Et=\'[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)\',Ct=`${Et}.show`,kt=".dropdown-menu",Lt=m()?"top-end":"top-start",Ot=m()?"top-start":"top-end",It=m()?"bottom-end":"bottom-start",St=m()?"bottom-start":"bottom-end",Dt=m()?"left-start":"right-start",Nt=m()?"right-start":"left-start",Pt={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},xt={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class Mt extends V{constructor(t,e){super(t,e),this._popper=null,this._parent=this._element.parentNode,this._menu=U.findOne(kt,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return Pt}static get DefaultType(){return xt}static get NAME(){return bt}toggle(){return this._isShown()?this.hide():this.show()}show(){if(d(this._element)||this._isShown())return;const t={relatedTarget:this._element};if(!$.trigger(this._element,"show.bs.dropdown",t).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(".navbar-nav"))for(const t of[].concat(...document.body.children))$.on(t,"mouseover",_);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(Tt),this._element.classList.add(Tt),$.trigger(this._element,"shown.bs.dropdown",t)}}hide(){if(d(this._element)||!this._isShown())return;const t={relatedTarget:this._element};this._completeHide(t)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(t){if(!$.trigger(this._element,"hide.bs.dropdown",t).defaultPrevented){if("ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))$.off(t,"mouseover",_);this._popper&&this._popper.destroy(),this._menu.classList.remove(Tt),this._element.classList.remove(Tt),this._element.setAttribute("aria-expanded","false"),W.removeDataAttribute(this._menu,"popper"),$.trigger(this._element,"hidden.bs.dropdown",t)}}_getConfig(t){if("object"==typeof(t=super._getConfig(t)).reference&&!l(t.reference)&&"function"!=typeof t.reference.getBoundingClientRect)throw new TypeError(`${bt.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return t}_createPopper(){if(void 0===i)throw new TypeError("Bootstrap\'s dropdowns require Popper (https://popper.js.org)");let t=this._element;"parent"===this._config.reference?t=this._parent:l(this._config.reference)?t=c(this._config.reference):"object"==typeof this._config.reference&&(t=this._config.reference);const e=this._getPopperConfig();this._popper=i.createPopper(t,this._menu,e)}_isShown(){return this._menu.classList.contains(Tt)}_getPlacement(){const t=this._parent;if(t.classList.contains("dropend"))return Dt;if(t.classList.contains("dropstart"))return Nt;if(t.classList.contains("dropup-center"))return"top";if(t.classList.contains("dropdown-center"))return"bottom";const e="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return t.classList.contains("dropup")?e?Ot:Lt:e?St:It}_detectNavbar(){return null!==this._element.closest(".navbar")}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map((t=>Number.parseInt(t,10))):"function"==typeof t?e=>t(e,this._element):t}_getPopperConfig(){const t={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||"static"===this._config.display)&&(W.setDataAttribute(this._menu,"popper","static"),t.modifiers=[{name:"applyStyles",enabled:!1}]),{...t,..."function"==typeof this._config.popperConfig?this._config.popperConfig(t):this._config.popperConfig}}_selectMenuItem({key:t,target:e}){const i=U.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter((t=>h(t)));i.length&&w(i,e,t===yt,!i.includes(e)).focus()}static jQueryInterface(t){return this.each((function(){const e=Mt.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}static clearMenus(t){if(2===t.button||"keyup"===t.type&&"Tab"!==t.key)return;const e=U.find(Ct);for(const i of e){const e=Mt.getInstance(i);if(!e||!1===e._config.autoClose)continue;const s=t.composedPath(),n=s.includes(e._menu);if(s.includes(e._element)||"inside"===e._config.autoClose&&!n||"outside"===e._config.autoClose&&n)continue;if(e._menu.contains(t.target)&&("keyup"===t.type&&"Tab"===t.key||/input|select|option|textarea|form/i.test(t.target.tagName)))continue;const o={relatedTarget:e._element};"click"===t.type&&(o.clickEvent=t),e._completeHide(o)}}static dataApiKeydownHandler(t){const e=/input|textarea/i.test(t.target.tagName),i="Escape"===t.key,s=[vt,yt].includes(t.key);if(!s&&!i)return;if(e&&!i)return;t.preventDefault();const n=U.findOne(Et,t.delegateTarget.parentNode),o=Mt.getOrCreateInstance(n);if(s)return t.stopPropagation(),o.show(),void o._selectMenuItem(t);o._isShown()&&(t.stopPropagation(),o.hide(),n.focus())}}$.on(document,At,Et,Mt.dataApiKeydownHandler),$.on(document,At,kt,Mt.dataApiKeydownHandler),$.on(document,wt,Mt.clearMenus),$.on(document,"keyup.bs.dropdown.data-api",Mt.clearMenus),$.on(document,wt,Et,(function(t){t.preventDefault(),Mt.getOrCreateInstance(this).toggle()})),b(Mt);const jt=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",$t=".sticky-top",Ft="padding-right",zt="margin-right";class Ht{constructor(){this._element=document.body}getWidth(){const t=document.documentElement.clientWidth;return Math.abs(window.innerWidth-t)}hide(){const t=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,Ft,(e=>e+t)),this._setElementAttributes(jt,Ft,(e=>e+t)),this._setElementAttributes($t,zt,(e=>e-t))}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,Ft),this._resetElementAttributes(jt,Ft),this._resetElementAttributes($t,zt)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(t,e,i){const s=this.getWidth();this._applyManipulationCallback(t,(t=>{if(t!==this._element&&window.innerWidth>t.clientWidth+s)return;this._saveInitialAttribute(t,e);const n=window.getComputedStyle(t).getPropertyValue(e);t.style.setProperty(e,`${i(Number.parseFloat(n))}px`)}))}_saveInitialAttribute(t,e){const i=t.style.getPropertyValue(e);i&&W.setDataAttribute(t,e,i)}_resetElementAttributes(t,e){this._applyManipulationCallback(t,(t=>{const i=W.getDataAttribute(t,e);null!==i?(W.removeDataAttribute(t,e),t.style.setProperty(e,i)):t.style.removeProperty(e)}))}_applyManipulationCallback(t,e){if(l(t))e(t);else for(const i of U.find(t,this._element))e(i)}}const qt="show",Bt="mousedown.bs.backdrop",Wt={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},Rt={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class Vt extends R{constructor(t){super(),this._config=this._getConfig(t),this._isAppended=!1,this._element=null}static get Default(){return Wt}static get DefaultType(){return Rt}static get NAME(){return"backdrop"}show(t){if(!this._config.isVisible)return void v(t);this._append();const e=this._getElement();this._config.isAnimated&&g(e),e.classList.add(qt),this._emulateAnimation((()=>{v(t)}))}hide(t){this._config.isVisible?(this._getElement().classList.remove(qt),this._emulateAnimation((()=>{this.dispose(),v(t)}))):v(t)}dispose(){this._isAppended&&($.off(this._element,Bt),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const t=document.createElement("div");t.className=this._config.className,this._config.isAnimated&&t.classList.add("fade"),this._element=t}return this._element}_configAfterMerge(t){return t.rootElement=c(t.rootElement),t}_append(){if(this._isAppended)return;const t=this._getElement();this._config.rootElement.append(t),$.on(t,Bt,(()=>{v(this._config.clickCallback)})),this._isAppended=!0}_emulateAnimation(t){y(t,this._getElement(),this._config.isAnimated)}}const Kt=".bs.focustrap",Qt="backward",Xt={autofocus:!0,trapElement:null},Yt={autofocus:"boolean",trapElement:"element"};class Ut extends R{constructor(t){super(),this._config=this._getConfig(t),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return Xt}static get DefaultType(){return Yt}static get NAME(){return"focustrap"}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),$.off(document,Kt),$.on(document,"focusin.bs.focustrap",(t=>this._handleFocusin(t))),$.on(document,"keydown.tab.bs.focustrap",(t=>this._handleKeydown(t))),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,$.off(document,Kt))}_handleFocusin(t){const{trapElement:e}=this._config;if(t.target===document||t.target===e||e.contains(t.target))return;const i=U.focusableChildren(e);0===i.length?e.focus():this._lastTabNavDirection===Qt?i[i.length-1].focus():i[0].focus()}_handleKeydown(t){"Tab"===t.key&&(this._lastTabNavDirection=t.shiftKey?Qt:"forward")}}const Gt="hidden.bs.modal",Jt="show.bs.modal",Zt="modal-open",te="show",ee="modal-static",ie={backdrop:!0,focus:!0,keyboard:!0},se={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class ne extends V{constructor(t,e){super(t,e),this._dialog=U.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new Ht,this._addEventListeners()}static get Default(){return ie}static get DefaultType(){return se}static get NAME(){return"modal"}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||this._isTransitioning||$.trigger(this._element,Jt,{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(Zt),this._adjustDialog(),this._backdrop.show((()=>this._showElement(t))))}hide(){this._isShown&&!this._isTransitioning&&($.trigger(this._element,"hide.bs.modal").defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(te),this._queueCallback((()=>this._hideModal()),this._element,this._isAnimated())))}dispose(){for(const t of[window,this._dialog])$.off(t,".bs.modal");this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new Vt({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new Ut({trapElement:this._element})}_showElement(t){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const e=U.findOne(".modal-body",this._dialog);e&&(e.scrollTop=0),g(this._element),this._element.classList.add(te),this._queueCallback((()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,$.trigger(this._element,"shown.bs.modal",{relatedTarget:t})}),this._dialog,this._isAnimated())}_addEventListeners(){$.on(this._element,"keydown.dismiss.bs.modal",(t=>{if("Escape"===t.key)return this._config.keyboard?(t.preventDefault(),void this.hide()):void this._triggerBackdropTransition()})),$.on(window,"resize.bs.modal",(()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()})),$.on(this._element,"mousedown.dismiss.bs.modal",(t=>{t.target===t.currentTarget&&("static"!==this._config.backdrop?this._config.backdrop&&this.hide():this._triggerBackdropTransition())}))}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide((()=>{document.body.classList.remove(Zt),this._resetAdjustments(),this._scrollBar.reset(),$.trigger(this._element,Gt)}))}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if($.trigger(this._element,"hidePrevented.bs.modal").defaultPrevented)return;const t=this._element.scrollHeight>document.documentElement.clientHeight,e=this._element.style.overflowY;"hidden"===e||this._element.classList.contains(ee)||(t||(this._element.style.overflowY="hidden"),this._element.classList.add(ee),this._queueCallback((()=>{this._element.classList.remove(ee),this._queueCallback((()=>{this._element.style.overflowY=e}),this._dialog)}),this._dialog),this._element.focus())}_adjustDialog(){const t=this._element.scrollHeight>document.documentElement.clientHeight,e=this._scrollBar.getWidth(),i=e>0;if(i&&!t){const t=m()?"paddingLeft":"paddingRight";this._element.style[t]=`${e}px`}if(!i&&t){const t=m()?"paddingRight":"paddingLeft";this._element.style[t]=`${e}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(t,e){return this.each((function(){const i=ne.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===i[t])throw new TypeError(`No method named "${t}"`);i[t](e)}}))}}$.on(document,"click.bs.modal.data-api",\'[data-bs-toggle="modal"]\',(function(t){const e=r(this);["A","AREA"].includes(this.tagName)&&t.preventDefault(),$.one(e,Jt,(t=>{t.defaultPrevented||$.one(e,Gt,(()=>{h(this)&&this.focus()}))}));const i=U.findOne(".modal.show");i&&ne.getInstance(i).hide(),ne.getOrCreateInstance(e).toggle(this)})),K(ne),b(ne);const oe="show",re="showing",ae="hiding",le=".offcanvas.show",ce="hidePrevented.bs.offcanvas",he="hidden.bs.offcanvas",de={backdrop:!0,keyboard:!0,scroll:!1},ue={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class _e extends V{constructor(t,e){super(t,e),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return de}static get DefaultType(){return ue}static get NAME(){return"offcanvas"}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||$.trigger(this._element,"show.bs.offcanvas",{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._backdrop.show(),this._config.scroll||(new Ht).hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(re),this._queueCallback((()=>{this._config.scroll&&!this._config.backdrop||this._focustrap.activate(),this._element.classList.add(oe),this._element.classList.remove(re),$.trigger(this._element,"shown.bs.offcanvas",{relatedTarget:t})}),this._element,!0))}hide(){this._isShown&&($.trigger(this._element,"hide.bs.offcanvas").defaultPrevented||(this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(ae),this._backdrop.hide(),this._queueCallback((()=>{this._element.classList.remove(oe,ae),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||(new Ht).reset(),$.trigger(this._element,he)}),this._element,!0)))}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const t=Boolean(this._config.backdrop);return new Vt({className:"offcanvas-backdrop",isVisible:t,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:t?()=>{"static"!==this._config.backdrop?this.hide():$.trigger(this._element,ce)}:null})}_initializeFocusTrap(){return new Ut({trapElement:this._element})}_addEventListeners(){$.on(this._element,"keydown.dismiss.bs.offcanvas",(t=>{"Escape"===t.key&&(this._config.keyboard?this.hide():$.trigger(this._element,ce))}))}static jQueryInterface(t){return this.each((function(){const e=_e.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}$.on(document,"click.bs.offcanvas.data-api",\'[data-bs-toggle="offcanvas"]\',(function(t){const e=r(this);if(["A","AREA"].includes(this.tagName)&&t.preventDefault(),d(this))return;$.one(e,he,(()=>{h(this)&&this.focus()}));const i=U.findOne(le);i&&i!==e&&_e.getInstance(i).hide(),_e.getOrCreateInstance(e).toggle(this)})),$.on(window,"load.bs.offcanvas.data-api",(()=>{for(const t of U.find(le))_e.getOrCreateInstance(t).show()})),$.on(window,"resize.bs.offcanvas",(()=>{for(const t of U.find("[aria-modal][class*=show][class*=offcanvas-]"))"fixed"!==getComputedStyle(t).position&&_e.getOrCreateInstance(t).hide()})),K(_e),b(_e);const ge=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),fe=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i,pe=/^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[\\d+/a-z]+=*$/i,me=(t,e)=>{const i=t.nodeName.toLowerCase();return e.includes(i)?!ge.has(i)||Boolean(fe.test(t.nodeValue)||pe.test(t.nodeValue)):e.filter((t=>t instanceof RegExp)).some((t=>t.test(i)))},be={"*":["class","dir","id","lang","role",/^aria-[\\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},ve={allowList:be,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},ye={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},we={entry:"(string|element|function|null)",selector:"(string|element)"};class Ae extends R{constructor(t){super(),this._config=this._getConfig(t)}static get Default(){return ve}static get DefaultType(){return ye}static get NAME(){return"TemplateFactory"}getContent(){return Object.values(this._config.content).map((t=>this._resolvePossibleFunction(t))).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(t){return this._checkContent(t),this._config.content={...this._config.content,...t},this}toHtml(){const t=document.createElement("div");t.innerHTML=this._maybeSanitize(this._config.template);for(const[e,i]of Object.entries(this._config.content))this._setContent(t,i,e);const e=t.children[0],i=this._resolvePossibleFunction(this._config.extraClass);return i&&e.classList.add(...i.split(" ")),e}_typeCheckConfig(t){super._typeCheckConfig(t),this._checkContent(t.content)}_checkContent(t){for(const[e,i]of Object.entries(t))super._typeCheckConfig({selector:e,entry:i},we)}_setContent(t,e,i){const s=U.findOne(i,t);s&&((e=this._resolvePossibleFunction(e))?l(e)?this._putElementInTemplate(c(e),s):this._config.html?s.innerHTML=this._maybeSanitize(e):s.textContent=e:s.remove())}_maybeSanitize(t){return this._config.sanitize?function(t,e,i){if(!t.length)return t;if(i&&"function"==typeof i)return i(t);const s=(new window.DOMParser).parseFromString(t,"text/html"),n=[].concat(...s.body.querySelectorAll("*"));for(const t of n){const i=t.nodeName.toLowerCase();if(!Object.keys(e).includes(i)){t.remove();continue}const s=[].concat(...t.attributes),n=[].concat(e["*"]||[],e[i]||[]);for(const e of s)me(e,n)||t.removeAttribute(e.nodeName)}return s.body.innerHTML}(t,this._config.allowList,this._config.sanitizeFn):t}_resolvePossibleFunction(t){return"function"==typeof t?t(this):t}_putElementInTemplate(t,e){if(this._config.html)return e.innerHTML="",void e.append(t);e.textContent=t.textContent}}const Te=new Set(["sanitize","allowList","sanitizeFn"]),Ee="fade",Ce="show",ke=".modal",Le="hide.bs.modal",Oe="hover",Ie="focus",Se={AUTO:"auto",TOP:"top",RIGHT:m()?"left":"right",BOTTOM:"bottom",LEFT:m()?"right":"left"},De={allowList:be,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,0],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:\'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>\',title:"",trigger:"hover focus"},Ne={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class Pe extends V{constructor(t,e){if(void 0===i)throw new TypeError("Bootstrap\'s tooltips require Popper (https://popper.js.org)");super(t,e),this._isEnabled=!0,this._timeout=0,this._isHovered=!1,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners()}static get Default(){return De}static get DefaultType(){return Ne}static get NAME(){return"tooltip"}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(t){if(this._isEnabled){if(t){const e=this._initializeOnDelegatedTarget(t);return e._activeTrigger.click=!e._activeTrigger.click,void(e._isWithActiveTrigger()?e._enter():e._leave())}this._isShown()?this._leave():this._enter()}}dispose(){clearTimeout(this._timeout),$.off(this._element.closest(ke),Le,this._hideModalHandler),this.tip&&this.tip.remove(),this._disposePopper(),super.dispose()}show(){if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(!this._isWithContent()||!this._isEnabled)return;const t=$.trigger(this._element,this.constructor.eventName("show")),e=(u(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(t.defaultPrevented||!e)return;this.tip&&(this.tip.remove(),this.tip=null);const i=this._getTipElement();this._element.setAttribute("aria-describedby",i.getAttribute("id"));const{container:s}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(s.append(i),$.trigger(this._element,this.constructor.eventName("inserted"))),this._popper?this._popper.update():this._popper=this._createPopper(i),i.classList.add(Ce),"ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))$.on(t,"mouseover",_);this._queueCallback((()=>{const t=this._isHovered;this._isHovered=!1,$.trigger(this._element,this.constructor.eventName("shown")),t&&this._leave()}),this.tip,this._isAnimated())}hide(){if(!this._isShown())return;if($.trigger(this._element,this.constructor.eventName("hide")).defaultPrevented)return;const t=this._getTipElement();if(t.classList.remove(Ce),"ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))$.off(t,"mouseover",_);this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1,this._isHovered=!1,this._queueCallback((()=>{this._isWithActiveTrigger()||(this._isHovered||t.remove(),this._element.removeAttribute("aria-describedby"),$.trigger(this._element,this.constructor.eventName("hidden")),this._disposePopper())}),this.tip,this._isAnimated())}update(){this._popper&&this._popper.update()}_isWithContent(){return Boolean(this._getTitle())}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(t){const e=this._getTemplateFactory(t).toHtml();if(!e)return null;e.classList.remove(Ee,Ce),e.classList.add(`bs-${this.constructor.NAME}-auto`);const i=(t=>{do{t+=Math.floor(1e6*Math.random())}while(document.getElementById(t));return t})(this.constructor.NAME).toString();return e.setAttribute("id",i),this._isAnimated()&&e.classList.add(Ee),e}setContent(t){this._newContent=t,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(t){return this._templateFactory?this._templateFactory.changeContent(t):this._templateFactory=new Ae({...this._config,content:t,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{".tooltip-inner":this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._config.originalTitle}_initializeOnDelegatedTarget(t){return this.constructor.getOrCreateInstance(t.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(Ee)}_isShown(){return this.tip&&this.tip.classList.contains(Ce)}_createPopper(t){const e="function"==typeof this._config.placement?this._config.placement.call(this,t,this._element):this._config.placement,s=Se[e.toUpperCase()];return i.createPopper(this._element,t,this._getPopperConfig(s))}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map((t=>Number.parseInt(t,10))):"function"==typeof t?e=>t(e,this._element):t}_resolvePossibleFunction(t){return"function"==typeof t?t.call(this._element):t}_getPopperConfig(t){const e={placement:t,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:t=>{this._getTipElement().setAttribute("data-popper-placement",t.state.placement)}}]};return{...e,..."function"==typeof this._config.popperConfig?this._config.popperConfig(e):this._config.popperConfig}}_setListeners(){const t=this._config.trigger.split(" ");for(const e of t)if("click"===e)$.on(this._element,this.constructor.eventName("click"),this._config.selector,(t=>this.toggle(t)));else if("manual"!==e){const t=e===Oe?this.constructor.eventName("mouseenter"):this.constructor.eventName("focusin"),i=e===Oe?this.constructor.eventName("mouseleave"):this.constructor.eventName("focusout");$.on(this._element,t,this._config.selector,(t=>{const e=this._initializeOnDelegatedTarget(t);e._activeTrigger["focusin"===t.type?Ie:Oe]=!0,e._enter()})),$.on(this._element,i,this._config.selector,(t=>{const e=this._initializeOnDelegatedTarget(t);e._activeTrigger["focusout"===t.type?Ie:Oe]=e._element.contains(t.relatedTarget),e._leave()}))}this._hideModalHandler=()=>{this._element&&this.hide()},$.on(this._element.closest(ke),Le,this._hideModalHandler),this._config.selector?this._config={...this._config,trigger:"manual",selector:""}:this._fixTitle()}_fixTitle(){const t=this._config.originalTitle;t&&(this._element.getAttribute("aria-label")||this._element.textContent.trim()||this._element.setAttribute("aria-label",t),this._element.removeAttribute("title"))}_enter(){this._isShown()||this._isHovered?this._isHovered=!0:(this._isHovered=!0,this._setTimeout((()=>{this._isHovered&&this.show()}),this._config.delay.show))}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout((()=>{this._isHovered||this.hide()}),this._config.delay.hide))}_setTimeout(t,e){clearTimeout(this._timeout),this._timeout=setTimeout(t,e)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(t){const e=W.getDataAttributes(this._element);for(const t of Object.keys(e))Te.has(t)&&delete e[t];return t={...e,..."object"==typeof t&&t?t:{}},t=this._mergeConfigObj(t),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}_configAfterMerge(t){return t.container=!1===t.container?document.body:c(t.container),"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t.originalTitle=this._element.getAttribute("title")||"","number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),t}_getDelegateConfig(){const t={};for(const e in this._config)this.constructor.Default[e]!==this._config[e]&&(t[e]=this._config[e]);return t}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null)}static jQueryInterface(t){return this.each((function(){const e=Pe.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}b(Pe);const xe={...Pe.Default,content:"",offset:[0,8],placement:"right",template:\'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>\',trigger:"click"},Me={...Pe.DefaultType,content:"(null|string|element|function)"};class je extends Pe{static get Default(){return xe}static get DefaultType(){return Me}static get NAME(){return"popover"}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{".popover-header":this._getTitle(),".popover-body":this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(t){return this.each((function(){const e=je.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}b(je);const $e="click.bs.scrollspy",Fe="active",ze="[href]",He={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null},qe={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element"};class Be extends V{constructor(t,e){super(t,e),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement="visible"===getComputedStyle(this._element).overflowY?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return He}static get DefaultType(){return qe}static get NAME(){return"scrollspy"}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const t of this._observableSections.values())this._observer.observe(t)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(t){return t.target=c(t.target)||document.body,t}_maybeEnableSmoothScroll(){this._config.smoothScroll&&($.off(this._config.target,$e),$.on(this._config.target,$e,ze,(t=>{const e=this._observableSections.get(t.target.hash);if(e){t.preventDefault();const i=this._rootElement||window,s=e.offsetTop-this._element.offsetTop;if(i.scrollTo)return void i.scrollTo({top:s,behavior:"smooth"});i.scrollTop=s}})))}_getNewObserver(){const t={root:this._rootElement,threshold:[.1,.5,1],rootMargin:this._getRootMargin()};return new IntersectionObserver((t=>this._observerCallback(t)),t)}_observerCallback(t){const e=t=>this._targetLinks.get(`#${t.target.id}`),i=t=>{this._previousScrollData.visibleEntryTop=t.target.offsetTop,this._process(e(t))},s=(this._rootElement||document.documentElement).scrollTop,n=s>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=s;for(const o of t){if(!o.isIntersecting){this._activeTarget=null,this._clearActiveClass(e(o));continue}const t=o.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(n&&t){if(i(o),!s)return}else n||t||i(o)}}_getRootMargin(){return this._config.offset?`${this._config.offset}px 0px -30%`:this._config.rootMargin}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const t=U.find(ze,this._config.target);for(const e of t){if(!e.hash||d(e))continue;const t=U.findOne(e.hash,this._element);h(t)&&(this._targetLinks.set(e.hash,e),this._observableSections.set(e.hash,t))}}_process(t){this._activeTarget!==t&&(this._clearActiveClass(this._config.target),this._activeTarget=t,t.classList.add(Fe),this._activateParents(t),$.trigger(this._element,"activate.bs.scrollspy",{relatedTarget:t}))}_activateParents(t){if(t.classList.contains("dropdown-item"))U.findOne(".dropdown-toggle",t.closest(".dropdown")).classList.add(Fe);else for(const e of U.parents(t,".nav, .list-group"))for(const t of U.prev(e,".nav-link, .nav-item > .nav-link, .list-group-item"))t.classList.add(Fe)}_clearActiveClass(t){t.classList.remove(Fe);const e=U.find("[href].active",t);for(const t of e)t.classList.remove(Fe)}static jQueryInterface(t){return this.each((function(){const e=Be.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t]()}}))}}$.on(window,"load.bs.scrollspy.data-api",(()=>{for(const t of U.find(\'[data-bs-spy="scroll"]\'))Be.getOrCreateInstance(t)})),b(Be);const We="ArrowLeft",Re="ArrowRight",Ve="ArrowUp",Ke="ArrowDown",Qe="active",Xe="fade",Ye="show",Ue=\'[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]\',Ge=`.nav-link:not(.dropdown-toggle), .list-group-item:not(.dropdown-toggle), [role="tab"]:not(.dropdown-toggle), ${Ue}`;class Je extends V{constructor(t){super(t),this._parent=this._element.closest(\'.list-group, .nav, [role="tablist"]\'),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),$.on(this._element,"keydown.bs.tab",(t=>this._keydown(t))))}static get NAME(){return"tab"}show(){const t=this._element;if(this._elemIsActive(t))return;const e=this._getActiveElem(),i=e?$.trigger(e,"hide.bs.tab",{relatedTarget:t}):null;$.trigger(t,"show.bs.tab",{relatedTarget:e}).defaultPrevented||i&&i.defaultPrevented||(this._deactivate(e,t),this._activate(t,e))}_activate(t,e){t&&(t.classList.add(Qe),this._activate(r(t)),this._queueCallback((()=>{"tab"===t.getAttribute("role")?(t.focus(),t.removeAttribute("tabindex"),t.setAttribute("aria-selected",!0),this._toggleDropDown(t,!0),$.trigger(t,"shown.bs.tab",{relatedTarget:e})):t.classList.add(Ye)}),t,t.classList.contains(Xe)))}_deactivate(t,e){t&&(t.classList.remove(Qe),t.blur(),this._deactivate(r(t)),this._queueCallback((()=>{"tab"===t.getAttribute("role")?(t.setAttribute("aria-selected",!1),t.setAttribute("tabindex","-1"),this._toggleDropDown(t,!1),$.trigger(t,"hidden.bs.tab",{relatedTarget:e})):t.classList.remove(Ye)}),t,t.classList.contains(Xe)))}_keydown(t){if(![We,Re,Ve,Ke].includes(t.key))return;t.stopPropagation(),t.preventDefault();const e=[Re,Ke].includes(t.key),i=w(this._getChildren().filter((t=>!d(t))),t.target,e,!0);i&&Je.getOrCreateInstance(i).show()}_getChildren(){return U.find(Ge,this._parent)}_getActiveElem(){return this._getChildren().find((t=>this._elemIsActive(t)))||null}_setInitialAttributes(t,e){this._setAttributeIfNotExists(t,"role","tablist");for(const t of e)this._setInitialAttributesOnChild(t)}_setInitialAttributesOnChild(t){t=this._getInnerElement(t);const e=this._elemIsActive(t),i=this._getOuterElement(t);t.setAttribute("aria-selected",e),i!==t&&this._setAttributeIfNotExists(i,"role","presentation"),e||t.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(t,"role","tab"),this._setInitialAttributesOnTargetPanel(t)}_setInitialAttributesOnTargetPanel(t){const e=r(t);e&&(this._setAttributeIfNotExists(e,"role","tabpanel"),t.id&&this._setAttributeIfNotExists(e,"aria-labelledby",`#${t.id}`))}_toggleDropDown(t,e){const i=this._getOuterElement(t);if(!i.classList.contains("dropdown"))return;const s=(t,s)=>{const n=U.findOne(t,i);n&&n.classList.toggle(s,e)};s(".dropdown-toggle",Qe),s(".dropdown-menu",Ye),s(".dropdown-item",Qe),i.setAttribute("aria-expanded",e)}_setAttributeIfNotExists(t,e,i){t.hasAttribute(e)||t.setAttribute(e,i)}_elemIsActive(t){return t.classList.contains(Qe)}_getInnerElement(t){return t.matches(Ge)?t:U.findOne(Ge,t)}_getOuterElement(t){return t.closest(".nav-item, .list-group-item")||t}static jQueryInterface(t){return this.each((function(){const e=Je.getOrCreateInstance(this);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t]()}}))}}$.on(document,"click.bs.tab",Ue,(function(t){["A","AREA"].includes(this.tagName)&&t.preventDefault(),d(this)||Je.getOrCreateInstance(this).show()})),$.on(window,"load.bs.tab",(()=>{for(const t of U.find(\'.active[data-bs-toggle="tab"], .active[data-bs-toggle="pill"], .active[data-bs-toggle="list"]\'))Je.getOrCreateInstance(t)})),b(Je);const Ze="hide",ti="show",ei="showing",ii={animation:"boolean",autohide:"boolean",delay:"number"},si={animation:!0,autohide:!0,delay:5e3};class ni extends V{constructor(t,e){super(t,e),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return si}static get DefaultType(){return ii}static get NAME(){return"toast"}show(){$.trigger(this._element,"show.bs.toast").defaultPrevented||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),this._element.classList.remove(Ze),g(this._element),this._element.classList.add(ti,ei),this._queueCallback((()=>{this._element.classList.remove(ei),$.trigger(this._element,"shown.bs.toast"),this._maybeScheduleHide()}),this._element,this._config.animation))}hide(){this.isShown()&&($.trigger(this._element,"hide.bs.toast").defaultPrevented||(this._element.classList.add(ei),this._queueCallback((()=>{this._element.classList.add(Ze),this._element.classList.remove(ei,ti),$.trigger(this._element,"hidden.bs.toast")}),this._element,this._config.animation)))}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(ti),super.dispose()}isShown(){return this._element.classList.contains(ti)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout((()=>{this.hide()}),this._config.delay)))}_onInteraction(t,e){switch(t.type){case"mouseover":case"mouseout":this._hasMouseInteraction=e;break;case"focusin":case"focusout":this._hasKeyboardInteraction=e}if(e)return void this._clearTimeout();const i=t.relatedTarget;this._element===i||this._element.contains(i)||this._maybeScheduleHide()}_setListeners(){$.on(this._element,"mouseover.bs.toast",(t=>this._onInteraction(t,!0))),$.on(this._element,"mouseout.bs.toast",(t=>this._onInteraction(t,!1))),$.on(this._element,"focusin.bs.toast",(t=>this._onInteraction(t,!0))),$.on(this._element,"focusout.bs.toast",(t=>this._onInteraction(t,!1)))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(t){return this.each((function(){const e=ni.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}return K(ni),b(ni),{Alert:Q,Button:Y,Carousel:ht,Collapse:mt,Dropdown:Mt,Modal:ne,Offcanvas:_e,Popover:je,ScrollSpy:Be,Tab:Je,Toast:ni,Tooltip:Pe}}));\n//# sourceMappingURL=bootstrap.min.js.map\n\n//# sourceURL=webpack://team-51-rslang/./node_modules/bootstrap/dist/js/bootstrap.min.js?')},402:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/js/bootstrap.min.js\nvar bootstrap_min = __webpack_require__(666);\n;// CONCATENATED MODULE: ./src/types/index.ts\nvar PageName;\r\n(function (PageName) {\r\n    PageName["main"] = "main";\r\n    PageName["audioCall"] = "audio-call";\r\n    PageName["sprint"] = "sprint";\r\n    PageName["studyBook"] = "study-book";\r\n    PageName["stats"] = "stats";\r\n    PageName["team"] = "team";\r\n    PageName["register"] = "register";\r\n    PageName["login"] = "login";\r\n    PageName["statistics"] = "statistics";\r\n})(PageName || (PageName = {}));\r\nvar types_Endpoints;\r\n(function (Endpoints) {\r\n    Endpoints["words"] = "words";\r\n    Endpoints["users"] = "users";\r\n    Endpoints["signin"] = "signin";\r\n    Endpoints["tokens"] = "tokens";\r\n    Endpoints["aggregatedWords"] = "aggregatedWords";\r\n    Endpoints["statistics"] = "statistics";\r\n})(types_Endpoints || (types_Endpoints = {}));\r\nvar AlertType;\r\n(function (AlertType) {\r\n    AlertType["primary"] = "primary";\r\n    AlertType["secondary"] = "secondary";\r\n    AlertType["success"] = "success";\r\n    AlertType["danger"] = "danger";\r\n    AlertType["warning"] = "warning";\r\n    AlertType["info"] = "info";\r\n    AlertType["light"] = "light";\r\n    AlertType["dark"] = "dark";\r\n})(AlertType || (AlertType = {}));\r\nvar types_StatusCode;\r\n(function (StatusCode) {\r\n    StatusCode[StatusCode["ok"] = 200] = "ok";\r\n    StatusCode[StatusCode["noContent"] = 204] = "noContent";\r\n    StatusCode[StatusCode["expectationFailed"] = 417] = "expectationFailed";\r\n    StatusCode[StatusCode["unprocessableEntity"] = 422] = "unprocessableEntity";\r\n    StatusCode[StatusCode["badRequest"] = 400] = "badRequest";\r\n    StatusCode[StatusCode["unauthorized"] = 401] = "unauthorized";\r\n    StatusCode[StatusCode["notFound"] = 404] = "notFound";\r\n    StatusCode[StatusCode["forbidden"] = 403] = "forbidden";\r\n})(types_StatusCode || (types_StatusCode = {}));\r\nvar WordStatus;\r\n(function (WordStatus) {\r\n    WordStatus["default"] = "default";\r\n    WordStatus["learned"] = "learned";\r\n    WordStatus["hard"] = "hard";\r\n})(WordStatus || (WordStatus = {}));\r\nvar StatusCardStatistics;\r\n(function (StatusCardStatistics) {\r\n    StatusCardStatistics["Game"] = "game";\r\n    StatusCardStatistics["Word"] = "word";\r\n})(StatusCardStatistics || (StatusCardStatistics = {}));\r\n\n;// CONCATENATED MODULE: ./src/utils/state.ts\n\r\nconst SALT = \'_team51_k23hiahsf3\';\r\nconst STATE_NAME = `state${SALT}`;\r\nconst USER_CHAPTER = 6;\r\nconst DEFAULT_STATE = {\r\n    page: PageName.main,\r\n    isUserChapter: false,\r\n    studyBookChapter: 0,\r\n    studyBookPage: 0,\r\n    indexWord: 0,\r\n    // TODO: add other states data we may need (like paginations and stuff)\r\n};\r\nfunction getState() {\r\n    const stateString = localStorage.getItem(STATE_NAME);\r\n    if (typeof stateString === \'string\') {\r\n        const state = JSON.parse(stateString);\r\n        return state;\r\n    }\r\n    return DEFAULT_STATE;\r\n}\r\nfunction saveState(state) {\r\n    localStorage.setItem(STATE_NAME, JSON.stringify(state));\r\n}\r\nfunction updateState(key, value) {\r\n    const state = getState();\r\n    const newState = { ...state, [key]: value };\r\n    newState.isUserChapter = state.studyBookChapter === USER_CHAPTER;\r\n    saveState(newState);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/utils/auth.ts\nconst auth_SALT = \'_team51_k23hiahsf3\';\r\nconst AUTH_NAME = `auth${auth_SALT}`;\r\nfunction saveAuth(auth) {\r\n    localStorage.setItem(AUTH_NAME, JSON.stringify(auth));\r\n}\r\nfunction getAuth() {\r\n    const authString = localStorage.getItem(AUTH_NAME);\r\n    return typeof authString === \'string\' ? JSON.parse(authString) : null;\r\n}\r\nfunction updateAuth(key, value) {\r\n    const auth = getAuth();\r\n    if (!auth)\r\n        return;\r\n    saveAuth({ ...auth, [key]: value });\r\n}\r\nfunction deleteAuth() {\r\n    localStorage.removeItem(AUTH_NAME);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/auth-menu/auth-menu.ts\n\r\n\r\nfunction handleEvents(elem) {\r\n    elem.onclick = (e) => {\r\n        const target = e.target;\r\n        // Click on Logout\r\n        if (target.closest(\'.btn-logout\')) {\r\n            deleteAuth();\r\n            elem.dispatchEvent(new Event(\'authUpdate\', { bubbles: true }));\r\n        }\r\n    };\r\n}\r\nfunction getAuthMenu() {\r\n    const curAuth = getAuth();\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'auth-menu\';\r\n    if (curAuth) {\r\n        elem.innerHTML = `\n      <div class="btn-group">\n        <a href="#account" class="btn btn-warning btn-logout">${curAuth.name} | logout</a>\n      </div>\n    `;\r\n    }\r\n    else {\r\n        elem.innerHTML = `\n    <div class="btn-group">\n      <a href="#register" class="btn btn-warning load-page-link">Register</a>\n      <a href="#login" class="btn btn-primary load-page-link">Login</a>\n    </div>\n  `;\r\n    }\r\n    handleEvents(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/header/header.ts\n\r\n\r\n\r\nfunction highlightActiveMenuItem(elem) {\r\n    const { page } = getState();\r\n    const activePageLink = elem.querySelector(`[href="#${page}"]`);\r\n    const activeDropdown = activePageLink?.closest(\'.dropdown\');\r\n    activePageLink?.classList.add(\'active-page\');\r\n    activeDropdown?.classList.add(\'active\');\r\n}\r\nfunction getHeader() {\r\n    const elem = document.createElement(\'header\');\r\n    elem.className = \'header\';\r\n    elem.innerHTML = `\n    <nav class="navbar navbar-expand-lg bg-light">\n      <div class="container">\n        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">\n          <span class="navbar-toggler-icon"></span>\n        </button>\n        <div class="collapse navbar-collapse" id="navbarSupportedContent">\n          <ul class="navbar-nav me-auto mb-2 mb-lg-0">\n            <li class="nav-item">\n              <a class="nav-link load-page-link" href="#main">Main</a>\n            </li>\n            <li class="nav-item">\n              <a class="nav-link load-page-link" href="#study-book">Study Book</a>\n            </li>\n            <li class="nav-item dropdown">\n              <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">\n                Mini-Games\n              </a>\n              <ul class="dropdown-menu">\n                <li><a class="dropdown-item load-page-link" href="#audio-call">Audio call</a></li>\n                <li><a class="dropdown-item load-page-link" href="#sprint">Sprint</a></li>\n              </ul>\n            </li>\n            <li class="nav-item">\n              <a class="nav-link load-page-link" href="#statistics">Statistics</a>\n            </li>\n            <li class="nav-item">\n              <a class="nav-link load-page-link" href="#team">Our Team</a>\n            </li>\n          </ul>\n          <div class="auth-menu"></div>\n        </div>\n      </div>\n    </nav>\n  `;\r\n    const authMenu = elem.querySelector(\'.auth-menu\');\r\n    authMenu.replaceWith(getAuthMenu());\r\n    highlightActiveMenuItem(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/about-app/learn.svg\nconst learn_namespaceObject = __webpack_require__.p + "assets/learn-00fbc3f1aeea5068a140.svg";\n;// CONCATENATED MODULE: ./src/components/about-app/about-app.ts\n\r\n\r\nfunction getAboutApp() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'about-app\';\r\n    elem.innerHTML = `\n    <div class="container text-center">\n      <div class="row justify-content-around about-wrapper">\n        <div class="col-sm-10 col-md-5 align-self-center about-wrapper--block">\n          <h1 class="page-heading__rslang about-app--title display-2">RS Lang</h1>\n          <h2 class="about-app--subtitle display-4">Learning English can be easy and fun!</h2>\n          <p class="about-app--content">\n            Memorize words using the dictionary and playing mini games,\n            listen to pronunciation, study transcription, examples in sentences,\n            analyze your achievements through detailed statistics and all this for free on RS Lang!\n          </p>\n        </div>\n        <div class="col-sm-10 col-md-5 align-self-center about-wrapper--block">\n          <img src="${learn_namespaceObject}" class="about-wrapper--img" alt="Brain full of English">\n        </div>\n      </div>\n    </div>\n  `;\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/footer/footer.ts\n\r\nfunction getFooter() {\r\n    const elem = document.createElement(\'footer\');\r\n    elem.className = \'footer\';\r\n    elem.innerHTML = `\n    <div class="container text-center">\n      <div class="row align-items-center">\n        <div class="col">\n          <a href="https://github.com/Jeneko" class="link-dark" target="_blank">Jeneko</a>\n          <a href="https://github.com/ArtemDubovov" class="link-dark" target="_blank">ArtemDubovov</a>\n          <a href="https://github.com/dmitrykaliasinski" class="link-dark" target="_blank">dmitrykaliasinski</a>\n        </div>\n        <div class="col">2022</div>\n        <div class="col">\n          <a href="https://rs.school/js/" class="footer-rsschool link-dark" target="_blank"></a>\n        </div>\n      </div>\n    </div>\n  `;\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/main-page/main-page.ts\n\r\n\r\nfunction getMainPage() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'main-page\';\r\n    elem.append(getAboutApp());\r\n    elem.append(getFooter());\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/API/index.ts\n\r\n\r\n\r\nconst SOURCE = \'https://team51-learnwords.herokuapp.com\';\r\nconst WORDS_PER_PAGE_DEFAULTS = 20;\r\nconst DEFAULT_WORDS_STAT = {\r\n    date: 0,\r\n    learnedWordsQty: 0,\r\n    newWordsQty: 0,\r\n    rightAnswers: 0,\r\n    wrongAnswers: 0,\r\n};\r\nconst DEFAULT_GAME_STAT = {\r\n    date: 0,\r\n    longestRow: 0,\r\n    newWordsQty: 0,\r\n    rightAnswers: 0,\r\n    wrongAnswers: 0,\r\n};\r\nasync function getWords(group, page) {\r\n    const url = `${SOURCE}/${types_Endpoints.words}?group=${group}&page=${page}`;\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function getWord(id) {\r\n    const url = `${SOURCE}/${types_Endpoints.words}/${id}`;\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function createUser(name, email, password) {\r\n    const url = `${SOURCE}/${types_Endpoints.users}`;\r\n    const options = {\r\n        method: \'POST\',\r\n        headers: { \'Content-Type\': \'application/json\' },\r\n        body: JSON.stringify({\r\n            name,\r\n            email,\r\n            password,\r\n        }),\r\n    };\r\n    const response = await fetch(url, options);\r\n    // Expectation Failed (User already exists)\r\n    if (response.status === types_StatusCode.expectationFailed) {\r\n        const errorText = await response.text();\r\n        return {\r\n            errors: [new Error(errorText)],\r\n            status: \'failed\',\r\n        };\r\n    }\r\n    // Unprocessable Entity (Wrong email or password format)\r\n    if (response.status === types_StatusCode.unprocessableEntity) {\r\n        const result = await response.json();\r\n        return result.error;\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function loginUser(email, password) {\r\n    const url = `${SOURCE}/${types_Endpoints.signin}`;\r\n    const options = {\r\n        method: \'POST\',\r\n        headers: { \'Content-Type\': \'application/json\' },\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n        }),\r\n    };\r\n    const response = await fetch(url, options);\r\n    // Not found OR Forbidden (Wrong email or password)\r\n    if (response.status === types_StatusCode.notFound || response.status === types_StatusCode.forbidden) {\r\n        const errorText = await response.text();\r\n        // Error text from response is bad formatted so we format it\r\n        const formattedErrorText = getFormattedErrorText(errorText);\r\n        return {\r\n            errors: [new Error(formattedErrorText)],\r\n            status: \'failed\',\r\n        };\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function updateToken() {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'No Auth found\');\r\n    const url = `${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.tokens}`;\r\n    const options = {\r\n        headers: {\r\n            Authorization: `Bearer ${curAuth.refreshToken}`,\r\n        },\r\n    };\r\n    const response = await fetch(url, options);\r\n    // If can\'t get new token - logout and show login page after reload\r\n    if (!response.ok) {\r\n        deleteAuth();\r\n        updateState(\'page\', \'login\');\r\n        window.location.reload();\r\n    }\r\n    const newTokens = await response.json();\r\n    updateAuth(\'token\', newTokens.token);\r\n    updateAuth(\'refreshToken\', newTokens.refreshToken);\r\n}\r\nasync function createUserWord(wordId, word) {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'No Auth found\');\r\n    const url = `${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.words}/${wordId}`;\r\n    const options = {\r\n        method: \'POST\',\r\n        headers: { \'Content-Type\': \'application/json\' },\r\n        body: JSON.stringify(word),\r\n    };\r\n    const response = await authFetch(url, options);\r\n    // Handle bad responses\r\n    if (response.status === types_StatusCode.badRequest || response.status === types_StatusCode.expectationFailed) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText);\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function getUserWord(wordId) {\r\n    const curAuth = auth.getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'No Auth found\');\r\n    const url = `${SOURCE}/${Endpoints.users}/${curAuth.userId}/${Endpoints.words}/${wordId}`;\r\n    const response = await authFetch(url);\r\n    // If User Word is not found\r\n    if (response.status === StatusCode.notFound) {\r\n        return false;\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function getAllUserWords() {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        return [];\r\n    const url = `${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.words}`;\r\n    const response = await authFetch(url);\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function updateUserWord(wordId, word) {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'No Auth found\');\r\n    const url = `${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.words}/${wordId}`;\r\n    const options = {\r\n        method: \'PUT\',\r\n        headers: { \'Content-Type\': \'application/json\' },\r\n        body: JSON.stringify(word),\r\n    };\r\n    const response = await authFetch(url, options);\r\n    // Handle bad responses\r\n    if (response.status === types_StatusCode.notFound) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText);\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function deleteUserWord(wordId) {\r\n    const curAuth = auth.getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'No Auth found\');\r\n    const url = `${SOURCE}/${Endpoints.users}/${curAuth.userId}/${Endpoints.words}/${wordId}`;\r\n    const options = { method: \'DELETE\' };\r\n    await authFetch(url, options);\r\n}\r\nasync function getAggregatedWords(filter, wordsPerPage = WORDS_PER_PAGE_DEFAULTS, group, page) {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'No Auth found\');\r\n    const url = new URL(`${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.aggregatedWords}`);\r\n    url.searchParams.set(\'wordsPerPage\', String(wordsPerPage));\r\n    if (filter)\r\n        url.searchParams.set(\'filter\', filter);\r\n    if (group !== undefined)\r\n        url.searchParams.set(\'group\', String(group));\r\n    if (page !== undefined)\r\n        url.searchParams.set(\'page\', String(page));\r\n    const response = await authFetch(url);\r\n    // Handle bad responses\r\n    if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText);\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function getAggregatedWord(wordId) {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'No Auth found\');\r\n    const url = new URL(`${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.aggregatedWords}/${wordId}`);\r\n    const response = await authFetch(url);\r\n    const result = await response.json();\r\n    return result[0];\r\n}\r\nasync function authFetch(url, options) {\r\n    let curAuth = getAuth();\r\n    if (!curAuth) {\r\n        throw new Error(\'No Auth found!\');\r\n    }\r\n    let optionsWithAuth = addAuthToOptions(curAuth.token, options);\r\n    let response = await fetch(url, optionsWithAuth);\r\n    // If access token is missing or invalid\r\n    if (response.status === types_StatusCode.unauthorized) {\r\n        await updateToken();\r\n        curAuth = getAuth();\r\n        optionsWithAuth = addAuthToOptions(curAuth.token, options);\r\n        response = await fetch(url, optionsWithAuth);\r\n    }\r\n    return response;\r\n}\r\nasync function getUserStatistic() {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'Can\\\'t get statistic: No Auth found\');\r\n    const url = `${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.statistics}`;\r\n    const response = await authFetch(url);\r\n    // IF user has no statistic yet\r\n    if (response.status === types_StatusCode.notFound) {\r\n        // Create, save and return default statistic\r\n        return updateUserStatistic(createNewUserStatistic());\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nasync function updateUserStatistic(statistic) {\r\n    const curAuth = getAuth();\r\n    if (!curAuth)\r\n        throw new Error(\'Can\\\'t update statistic: No Auth found\');\r\n    // We must do this because server doesn\'t allow this prop in JSON object,\r\n    // but getUserStatistic returns object with this param so we must delete it\r\n    delete statistic.id;\r\n    const url = `${SOURCE}/${types_Endpoints.users}/${curAuth.userId}/${types_Endpoints.statistics}`;\r\n    const options = {\r\n        method: \'PUT\',\r\n        headers: { \'Content-Type\': \'application/json\' },\r\n        body: JSON.stringify(statistic),\r\n    };\r\n    const response = await authFetch(url, options);\r\n    // Handle bad responses\r\n    if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error);\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n}\r\nfunction addAuthToOptions(token, options) {\r\n    const newHeaders = { ...options?.headers, Authorization: `Bearer ${token}` };\r\n    const optionsWithAuth = { ...options };\r\n    optionsWithAuth.headers = newHeaders;\r\n    return optionsWithAuth;\r\n}\r\nfunction getFormattedErrorText(errorText) {\r\n    let formattedErrorText = errorText;\r\n    // FROM [1] TO [2]\r\n    // [1] Error: Couldn\'t find a(an) user with: {"email":"asd@asdf"}\r\n    // [2] Error: Couldn\'t find a(an) user with: email: asd@asdf\r\n    if (formattedErrorText.search(\'email\') !== -1) {\r\n        formattedErrorText = formattedErrorText.replaceAll(/[{""}]/g, \'\');\r\n        formattedErrorText = formattedErrorText.replace(\'email:\', \'email: \');\r\n    }\r\n    // FROM [1] TO [2]\r\n    // [1] Error: Forbidden\r\n    // [2] Error: wrong password!\r\n    if (formattedErrorText.search(\'Forbidden\') !== -1) {\r\n        formattedErrorText = \'wrong password :(\';\r\n    }\r\n    return formattedErrorText;\r\n}\r\n// Create brand new statisic\r\nfunction createNewUserStatistic() {\r\n    const newStatistic = {\r\n        learnedWords: 0,\r\n        optional: {\r\n            words: { stat: [{ ...DEFAULT_WORDS_STAT, date: Date.now() }] },\r\n            sprint: { stat: [{ ...DEFAULT_GAME_STAT, date: Date.now() }] },\r\n            audiocall: { stat: [{ ...DEFAULT_GAME_STAT, date: Date.now() }] },\r\n        },\r\n    };\r\n    return newStatistic;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/alert-message/alert-message.ts\n\r\nfunction getAlertMessage(type, message) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = `alert alert-dismissible alert-${type}`;\r\n    elem.innerHTML = `\n    <div>${message}</div>\n    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n  `;\r\n    return elem;\r\n}\r\nfunction outputAlert(elem, type, message) {\r\n    elem.prepend(getAlertMessage(type, message));\r\n}\r\nfunction outputResponseErrors(elem, result) {\r\n    result.errors.forEach((error) => {\r\n        outputAlert(elem, AlertType.danger, `Error: ${error.message}`);\r\n    });\r\n}\r\nfunction clearAlerts(elem) {\r\n    const alerts = elem.querySelectorAll(\'.alert\');\r\n    alerts.forEach((alert) => alert.remove());\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/login-form/login-form.ts\n\r\n\r\n\r\n\r\nfunction eventHandler(elem) {\r\n    elem.onsubmit = async (e) => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        const { email, password } = target.elements;\r\n        const submitBtn = target.querySelector(\'button[type="submit"]\');\r\n        clearAlerts(elem);\r\n        // TODO: show spinner while logging in\r\n        submitBtn.disabled = true;\r\n        const loginResult = await loginUser(email.value, password.value);\r\n        submitBtn.disabled = false;\r\n        if (\'errors\' in loginResult) {\r\n            outputResponseErrors(elem, loginResult);\r\n            return;\r\n        }\r\n        saveAuth(loginResult);\r\n        elem.dispatchEvent(new Event(\'authUpdate\', { bubbles: true }));\r\n    };\r\n}\r\nfunction getRegisterForm() {\r\n    const curAuth = getAuth();\r\n    const elem = document.createElement(\'form\');\r\n    elem.className = \'user-form register-form\';\r\n    if (curAuth) {\r\n        elem.innerHTML = `\n      <h3>Welcome, ${curAuth.name}!</h3>\n      <p>Thank you for comming. Please, enjoy all functions of RSLang application.</p>\n    `;\r\n        outputAlert(elem, AlertType.success, \'Success!\');\r\n    }\r\n    else {\r\n        elem.innerHTML = `\n      <div class="mb-3">\n        <label for="login-form-email" class="form-label">\n          Email address\n          <span class="asterisk" title="Required field">*<span>\n        </label>\n        <input name="email" type="email" class="form-control" id="login-form-email" aria-describedby="emailHelp" required>\n        <div id="emailHelp" class="form-text">We\'ll never share your email with anyone else.</div>\n      </div>\n      <div class="mb-3">\n        <label for="login-form-password" class="form-label">\n          Password\n          <span class="asterisk" title="Required field">*<span>\n        </label>\n        <input name="password" type="password" pattern=".{8,}" class="form-control" id="login-form-password" aria-describedby="passHelp" title="8 characters minimum" required>\n        <div id="passHelp" class="form-text">Password must be 8 characters minimum.</div>\n      </div>\n      <button type="submit" class="btn btn-primary">\n        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n        Login\n      </button>\n    `;\r\n    }\r\n    eventHandler(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/login-page/login-page.ts\n\r\n\r\nfunction getRegisterPage() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'login-page\';\r\n    elem.innerHTML = `\n    <div class="container">\n      <h1 class="page-heading">\n        <span class="page-heading__rslang">RSLang</span> Login\n      </h1>\n    </div>\n  `;\r\n    const container = elem.querySelector(\'.container\');\r\n    container.append(getRegisterForm());\r\n    elem.append(getFooter());\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/startNewGame/playAudio/playAudio.ts\n\r\nasync function playAudio(fileName) {\r\n    const url = `${SOURCE}/${fileName}`;\r\n    const audio = new Audio(url);\r\n    audio.play();\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/load-spinner/load-spinner.ts\n\r\nfunction showLoadSpinner(show) {\r\n    if (show) {\r\n        document.body.append(getSpinner());\r\n        return;\r\n    }\r\n    document.body.querySelector(\'.load-spinner\')?.remove();\r\n}\r\nfunction getSpinner() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.innerHTML = `\n    <div class="load-spinner__content">\n      <span class="spinner-border spinner-border-lg" role="status" aria-hidden="true"></span>\n      <div class="load-spinner__text">Loading...</div>\n    </div>\n  `;\r\n    elem.classList.add(\'load-spinner\');\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/utils/user-words.ts\n\r\n\r\nconst OPTIONAL_DEFAULTS = {\r\n    guessedInRow: 0,\r\n    guessedRight: 0,\r\n    guessedWrong: 0,\r\n};\r\nconst USER_WORD_DEFAULTS = {\r\n    difficulty: WordStatus["default"],\r\n    optional: OPTIONAL_DEFAULTS,\r\n};\r\nasync function setWordStatus(wordId, difficulty) {\r\n    const userWords = await getAllUserWords();\r\n    const userWord = userWords.find((word) => word.wordId === wordId);\r\n    // If user word exists\r\n    if (userWord) {\r\n        const updatedUserWord = {\r\n            difficulty,\r\n            optional: { ...userWord.optional },\r\n        };\r\n        await updateUserWord(wordId, updatedUserWord);\r\n        return;\r\n    }\r\n    // If user word does not exist\r\n    await createUserWord(wordId, {\r\n        difficulty,\r\n        optional: { ...OPTIONAL_DEFAULTS },\r\n    });\r\n}\r\nasync function setWordOptional(wordId, optional) {\r\n    const userWords = await getAllUserWords();\r\n    const userWord = userWords.find((word) => word.wordId === wordId);\r\n    // If user word exists\r\n    if (userWord) {\r\n        const updatedUserWord = {\r\n            difficulty: userWord.difficulty,\r\n            optional: { ...userWord.optional, ...optional },\r\n        };\r\n        await updateUserWord(wordId, updatedUserWord);\r\n        return;\r\n    }\r\n    // If user word does not exist\r\n    await createUserWord(wordId, {\r\n        difficulty: WordStatus["default"],\r\n        optional: { ...OPTIONAL_DEFAULTS, ...optional },\r\n    });\r\n}\r\nasync function setWordStatusAndOptional(wordId, difficulty, optional) {\r\n    const userWords = await getAllUserWords();\r\n    const userWord = userWords.find((word) => word.wordId === wordId);\r\n    // If user word exists\r\n    if (userWord) {\r\n        const updatedUserWord = {\r\n            difficulty,\r\n            optional: { ...userWord.optional, ...optional },\r\n        };\r\n        await updateUserWord(wordId, updatedUserWord);\r\n        return;\r\n    }\r\n    // If user word does not exist\r\n    await createUserWord(wordId, {\r\n        difficulty,\r\n        optional: { ...OPTIONAL_DEFAULTS, ...optional },\r\n    });\r\n}\r\nasync function getWordsWithUserData(group, page) {\r\n    const words = await getWords(group, page);\r\n    const userWords = await getAllUserWords();\r\n    const wordsWithUserData = words.map((word) => {\r\n        const userWord = userWords.find((curUserWord) => curUserWord.wordId === word.id);\r\n        word.userWord = userWord || USER_WORD_DEFAULTS;\r\n        return word;\r\n    });\r\n    return wordsWithUserData;\r\n}\r\nasync function getWordWithUserData(id) {\r\n    const word = await getWord(id);\r\n    const userWords = await getAllUserWords();\r\n    const userWord = userWords.find((curUserWord) => curUserWord.wordId === word.id);\r\n    word.userWord = userWord || USER_WORD_DEFAULTS;\r\n    return word;\r\n}\r\nasync function getAllUserWordsWithData() {\r\n    try {\r\n        const aggregatedResults = await getAggregatedWords(\'{"userWord.difficulty": "hard"}\', 1000);\r\n        const userWordsWithData = aggregatedResults[0].paginatedResults;\r\n        const tmp = userWordsWithData.map((el) => {\r\n            // eslint-disable-next-line no-underscore-dangle\r\n            el.id = el._id;\r\n            return el;\r\n        });\r\n        return tmp;\r\n    }\r\n    catch {\r\n        return [];\r\n    }\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-game/modal-lvl.ts\n\r\nconst renderModal = `\n  <h1 class="page-heading">\n    <span class="page-heading__rslang">RSLang</span> Sprint\n  </h1>\n  <div class="sprint">\n    <div class="modal-lvl study-book-chapters-menu">\n      <h2>Levels</h2>\n      <p>From Easy to most Hard</p>\n      <ol>\n        <li><button class="btn btn-lvl btn-primary" data-lvl="0">1</button></li>\n        <li><button class="btn btn-lvl btn-primary" data-lvl="1">2</button></li>\n        <li><button class="btn btn-lvl btn-primary" data-lvl="2">3</button></li>\n        <li><button class="btn btn-lvl btn-primary" data-lvl="3">4</button></li>\n        <li><button class="btn btn-lvl btn-primary" data-lvl="4">5</button></li>\n        <li><button class="btn btn-lvl btn-primary" data-lvl="5">6</button></li>\n        <li><button class="btn btn-lvl btn-primary btn-danger" data-lvl="6">7</button></li>\n      </ol>\n      <p class="lvl-instructions">\n        Game controls: you can play with both, mouse/touchpad and keyboard.<br>\n        Use <kbd>ArrowLeft</kbd> and <kbd>ArrowRight</kbd> to select an answer.\n      </p>\n      <div class="message"></div>\n    </div>\n  </div>\n`;\r\nconst generateWords = async (lvl, currentPage) => {\r\n    const promises = [];\r\n    for (let page = 0; page <= currentPage; page += 1) {\r\n        promises.push(getWords(lvl, page));\r\n    }\r\n    const allWords = await Promise.allSettled(promises);\r\n    const allPassedWOrds = allWords\r\n        .filter((result) => result.status === \'fulfilled\')\r\n        .map((result) => (result.status === \'fulfilled\' ? result.value : []));\r\n    return allPassedWOrds.flat();\r\n};\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-game/sprint-state.ts\nconst sprintState = {\r\n    earnedPoints: 0,\r\n    rewordPoints: 10,\r\n    rightAnswers: [],\r\n    wrongAnswers: [],\r\n    words: [],\r\n    userWords: [],\r\n    wordsIndexes: [],\r\n    randomWords: {\r\n        curWordIdx: 0,\r\n        randomIdx: 0,\r\n    },\r\n    timer: 60,\r\n    session: {\r\n        count: 0,\r\n        longestRow: 0,\r\n    },\r\n};\r\nconst setDefaultSprintState = () => {\r\n    sprintState.rightAnswers = [];\r\n    sprintState.wrongAnswers = [];\r\n    sprintState.earnedPoints = 0;\r\n    sprintState.rewordPoints = 10;\r\n    sprintState.timer = 60;\r\n    sprintState.session.count = 0;\r\n    sprintState.session.longestRow = 0;\r\n};\r\n\n;// CONCATENATED MODULE: ./src/utils/statistic.ts\n\r\nfunction getTodayStat(statistic, type) {\r\n    // Check date\r\n    const curDate = new Date();\r\n    const lastDate = new Date(statistic.optional[type].stat[statistic.optional[type].stat.length - 1].date);\r\n    // If last stat is current day stat - return last stat\r\n    if (curDate.getFullYear() === lastDate.getFullYear()\r\n        && curDate.getMonth() === lastDate.getMonth()\r\n        && curDate.getDate() === lastDate.getDate()) {\r\n        return statistic.optional[type].stat[statistic.optional[type].stat.length - 1];\r\n    }\r\n    // If last stat is yesterday stat - create new stat, add it to stat and return it\r\n    let newStat;\r\n    // TODO: find a good way to get rid of switch\r\n    switch (type) {\r\n        case \'words\':\r\n            newStat = { ...DEFAULT_WORDS_STAT, date: curDate.getTime() };\r\n            statistic.optional[type].stat.push(newStat);\r\n            break;\r\n        case \'audiocall\':\r\n        case \'sprint\':\r\n        default:\r\n            newStat = { ...DEFAULT_GAME_STAT, date: curDate.getTime() };\r\n            statistic.optional[type].stat.push(newStat);\r\n    }\r\n    return newStat;\r\n}\r\nasync function updateLearnedStatistic(delta) {\r\n    const userStat = await getUserStatistic();\r\n    const wordStat = getTodayStat(userStat, \'words\');\r\n    userStat.learnedWords = userStat.learnedWords + delta < 0 ? 0 : userStat.learnedWords + delta;\r\n    wordStat.learnedWordsQty = wordStat.learnedWordsQty + delta < 0 ? 0 : wordStat.learnedWordsQty + delta;\r\n    await updateUserStatistic(userStat);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-game/statistic.ts\n\r\n\r\n\r\n\r\n/* harmony default export */ const statistic = (async () => {\r\n    const userWords = await getAllUserWords();\r\n    const userStat = await getUserStatistic();\r\n    const wordStat = getTodayStat(userStat, \'words\');\r\n    const gameStat = getTodayStat(userStat, \'sprint\');\r\n    const learnedWords = getLearnedWordsNumber(userWords);\r\n    const newWordsQty = getNewWordsQty(userWords);\r\n    const rightAnswers = sprintState.rightAnswers.length;\r\n    const wrongAnswers = sprintState.wrongAnswers.length;\r\n    const { longestRow } = sprintState.session;\r\n    userStat.learnedWords = userStat.learnedWords + learnedWords < 0 ? 0 : userStat.learnedWords + learnedWords;\r\n    wordStat.newWordsQty += newWordsQty;\r\n    wordStat.learnedWordsQty = wordStat.learnedWordsQty + learnedWords < 0 ? 0 : wordStat.learnedWordsQty + learnedWords;\r\n    wordStat.rightAnswers += rightAnswers;\r\n    wordStat.wrongAnswers += wrongAnswers;\r\n    gameStat.longestRow = gameStat.longestRow > longestRow ? gameStat.longestRow : longestRow;\r\n    gameStat.newWordsQty += newWordsQty;\r\n    gameStat.rightAnswers += rightAnswers;\r\n    gameStat.wrongAnswers += wrongAnswers;\r\n    await updateUserStatistic(userStat);\r\n});\r\nconst getLearnedWords = (wordArray) => wordArray.filter((word) => word.difficulty === WordStatus.learned);\r\nconst getLearnedWordsNumber = (userWords) => {\r\n    const learnedWordsBeforeGame = getLearnedWords(sprintState.userWords);\r\n    const learnedWordsAfterGame = getLearnedWords(userWords);\r\n    return learnedWordsAfterGame.length - learnedWordsBeforeGame.length;\r\n};\r\nconst getUserWordsId = (wordArray) => wordArray.map((word) => word.wordId);\r\nconst getNewWordsQty = (userWords) => {\r\n    const userWordsIdBeforeGame = getUserWordsId(sprintState.userWords);\r\n    const userWordsIdAfterGame = getUserWordsId(userWords);\r\n    return userWordsIdAfterGame.filter((id) => !userWordsIdBeforeGame.includes(id)).length;\r\n};\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-game/types.ts\nvar Points;\r\n(function (Points) {\r\n    Points[Points["Small"] = 10] = "Small";\r\n    Points[Points["Medium"] = 20] = "Medium";\r\n    Points[Points["High"] = 40] = "High";\r\n})(Points || (Points = {}));\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-game/user-words-update.ts\n\r\n\r\n\r\n\r\n/* harmony default export */ const user_words_update = (async (id, isAnswerCorrect) => {\r\n    const word = sprintState.userWords.find((currWord) => currWord.wordId === id);\r\n    const userWord = {\r\n        difficulty: word?.difficulty || WordStatus["default"],\r\n        optional: word?.optional || { ...OPTIONAL_DEFAULTS },\r\n    };\r\n    if (isAnswerCorrect) {\r\n        userWord.difficulty = userWord.optional.guessedInRow >= 2 ? WordStatus.learned : userWord.difficulty;\r\n        userWord.optional.guessedRight += 1;\r\n        userWord.optional.guessedInRow += 1;\r\n    }\r\n    else {\r\n        userWord.difficulty = userWord.difficulty === WordStatus.hard ? WordStatus.hard : WordStatus["default"];\r\n        userWord.optional.guessedWrong += 1;\r\n        userWord.optional.guessedInRow = 0;\r\n    }\r\n    if (word) {\r\n        await updateUserWord(id, userWord);\r\n    }\r\n    else {\r\n        await createUserWord(id, userWord);\r\n    }\r\n});\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-game/sprint-game-window.ts\n\r\n\r\n\r\n\r\n\r\nconst renderGame = (randomWords) => `\n  <div class="game-on">\n    <div class="points">\n      <p class="earned-points">${sprintState.earnedPoints}</p>\n      <p class="reword-points">+${sprintState.rewordPoints}</p>\n    </div>\n    <div class="choose-words">\n      <div class="session">🤨</div>\n      <p class="english-word">${sprintState.words[randomWords.curWordIdx].word}</p>\n      <p class="russian-word">${sprintState.words[randomWords.randomIdx].wordTranslate}</p>\n      <div class="choose-buttons" tabindex="-1">\n        <button class="btn chooseBtn btn-primary btn-true">True</button>\n        <button class="btn chooseBtn btn-primary btn-false">False</button>\n      </div>\n    </div>\n    <div class="timer"><span class="time"></span></div>\n  </div>\n`;\r\nconst loadingBar = (/* unused pure expression or super */ null && (`\n  <div class="d-flex justify-content-center">\n    <div class="spinner-border" role="status">\n      <span class="visually-hidden">Loading...</span>\n    </div>\n  </div>\n`));\r\nconst chooseWords = (wordsIndexes) => {\r\n    const firstWordIndex = randomNumber(wordsIndexes.length - 1);\r\n    const secondWordIndex = randomNumber(wordsIndexes.length - 1);\r\n    const randomIndexes = [wordsIndexes[firstWordIndex], wordsIndexes[secondWordIndex]];\r\n    return {\r\n        curWordIdx: wordsIndexes[firstWordIndex],\r\n        randomIdx: randomIndexes[Math.round(Math.random())],\r\n    };\r\n};\r\nconst randomNumber = (max) => Math.round(Math.random() * max);\r\nconst subtractShownWordIdx = (wordsIdx, shownWordIdx) => wordsIdx.filter((i) => i !== shownWordIdx);\r\nconst currentTranslateCheck = (randomWords, depend) => {\r\n    const { id } = sprintState.words[randomWords.curWordIdx];\r\n    if (depend) {\r\n        sprintState.earnedPoints += sprintState.rewordPoints;\r\n        sprintState.rightAnswers.push(randomWords.curWordIdx);\r\n        sprintState.session.count += 1;\r\n        sprintState.session.longestRow = sprintState.session.count;\r\n        sessionCounter();\r\n    }\r\n    else {\r\n        sprintState.wrongAnswers.push(randomWords.curWordIdx);\r\n        setDefaultSession();\r\n    }\r\n    if (getAuth()) {\r\n        user_words_update(id, depend);\r\n    }\r\n};\r\nconst updateGame = (randomWords, elem) => {\r\n    elem.querySelector(\'.earned-points\').innerHTML = sprintState.earnedPoints.toString();\r\n    elem.querySelector(\'.reword-points\').innerHTML = `+${sprintState.rewordPoints}`;\r\n    elem.querySelector(\'.english-word\').innerHTML = sprintState.words[randomWords.curWordIdx].word;\r\n    elem.querySelector(\'.russian-word\').innerHTML = sprintState.words[randomWords.randomIdx].wordTranslate;\r\n};\r\nconst modalResults = () => `\n  <div class="results modal-body">\n    <h3 class="result-points">${sprintState.earnedPoints} points</h3>\n    <h3>Your longest string of guessed ${sprintState.session.longestRow} words!</h3>\n    <h5>Right answers: (${sprintState.rightAnswers.length})</h5>\n    <ul class="results__unordered-list list-group">\n      ${renderResultList(sprintState.rightAnswers, sprintState.words, \'true\')}\n    </ul>\n    <h5>Wrong answers: (${sprintState.wrongAnswers.length})</h5>\n    <ul class="results__unordered-list list-group">\n      ${renderResultList(sprintState.wrongAnswers, sprintState.words, \'false\')}\n    </ul>\n    <button type="button" class="results__close-button btn btn-primary">Play again</button>\n  </div>\n`;\r\nconst startTimer = () => {\r\n    const timeElem = document.querySelector(\'.time\');\r\n    if (timeElem) {\r\n        timeElem.innerHTML = sprintState.timer.toString();\r\n        sprintState.timer -= 1;\r\n        if (sprintState.timer <= 0) {\r\n            document.querySelector(\'.sprint\').innerHTML = modalResults();\r\n            if (getAuth()) {\r\n                statistic();\r\n            }\r\n            return;\r\n        }\r\n        setTimeout(startTimer, 1000);\r\n    }\r\n};\r\nconst sessionCounter = () => {\r\n    sprintState.session.longestRow = sprintState.session.count > sprintState.session.longestRow\r\n        ? sprintState.session.count\r\n        : sprintState.session.longestRow;\r\n    if (sprintState.session.count === 3) {\r\n        sprintState.rewordPoints = Points.Medium;\r\n        document.querySelector(\'.session\').textContent = \'🙂\';\r\n    }\r\n    if (sprintState.session.count >= 6) {\r\n        sprintState.rewordPoints = Points.High;\r\n        document.querySelector(\'.session\').textContent = \'😀\';\r\n    }\r\n};\r\nconst setDefaultSession = () => {\r\n    sprintState.session.count = 0;\r\n    sprintState.rewordPoints = Points.Small;\r\n    document.querySelector(\'.session\').textContent = \'🤨\';\r\n};\r\nconst renderResultList = (resultIdx, wordsArr, bool) => resultIdx\r\n    .map((wordIndex) => `<li class="results__list-${bool} list-group-item">\n    <button class="button-audio-result">\n      <img class="button-audio-image" src="assets/speaker-icon.svg" data-audio="${wordsArr[wordIndex].audio}"/>\n    </button>\n  ${wordsArr[wordIndex].word} | ${wordsArr[wordIndex].wordTranslate}\n  </li>`)\r\n    .join(\'\');\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-game/sprint-game.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PAGES_NUMBER = 30;\r\nconst HARD_WORDS_PAGE = 6;\r\nasync function getSprintGame() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'sprint-game container\';\r\n    elem.innerHTML = renderModal;\r\n    if (getState().page === PageName.studyBook) {\r\n        elem.querySelector(\'.modal-lvl\').style.display = \'none\';\r\n        const gameWindow = elem.querySelector(\'.sprint\');\r\n        const { studyBookChapter, studyBookPage } = getState();\r\n        createGame(+studyBookChapter, +studyBookPage, gameWindow);\r\n    }\r\n    sprintHandler(elem);\r\n    return elem;\r\n}\r\nconst sprintHandler = (elem) => {\r\n    elem.addEventListener(\'click\', async (event) => {\r\n        const { classList } = event.target;\r\n        const gameWindow = elem.querySelector(\'.sprint\');\r\n        elem.querySelector(\'.choose-buttons\')?.focus();\r\n        if (classList.contains(\'btn-lvl\')) {\r\n            const target = event.target;\r\n            const { lvl } = target.dataset;\r\n            createGame(Number(lvl), PAGES_NUMBER, gameWindow);\r\n        }\r\n        if (classList.contains(\'chooseBtn\')) {\r\n            const isRandom = sprintState.randomWords.curWordIdx === sprintState.randomWords.randomIdx;\r\n            currentTranslateCheck(sprintState.randomWords, classList.contains(\'btn-true\') ? isRandom : !isRandom);\r\n            sprintState.wordsIndexes = subtractShownWordIdx(sprintState.wordsIndexes, sprintState.randomWords.curWordIdx);\r\n            if (sprintState.wordsIndexes.length) {\r\n                sprintState.randomWords = chooseWords(sprintState.wordsIndexes);\r\n                updateGame(sprintState.randomWords, elem);\r\n            }\r\n            else {\r\n                gameWindow.innerHTML = modalResults();\r\n                if (getAuth()) {\r\n                    statistic();\r\n                }\r\n            }\r\n        }\r\n        if (classList.contains(\'results__close-button\')) {\r\n            elem.innerHTML = renderModal;\r\n        }\r\n        if (classList.contains(\'button-audio-image\')) {\r\n            const target = event.target;\r\n            const { audio } = target.dataset;\r\n            playAudio(audio);\r\n        }\r\n    });\r\n    elem.addEventListener(\'keyup\', (event) => {\r\n        const leftButton = elem.querySelector(\'.btn-true\');\r\n        const rightButton = elem.querySelector(\'.btn-false\');\r\n        if (elem.querySelector(\'.chooseBtn\')) {\r\n            if (event.key === \'ArrowLeft\') {\r\n                leftButton.blur();\r\n                leftButton.click();\r\n            }\r\n            if (event.key === \'ArrowRight\') {\r\n                rightButton.blur();\r\n                rightButton.click();\r\n            }\r\n        }\r\n    });\r\n    elem.addEventListener(\'keydown\', (event) => {\r\n        const leftButton = elem.querySelector(\'.btn-true\');\r\n        const rightButton = elem.querySelector(\'.btn-false\');\r\n        if (elem.querySelector(\'.chooseBtn\')) {\r\n            if (event.key === \'ArrowLeft\') {\r\n                leftButton.focus();\r\n            }\r\n            if (event.key === \'ArrowRight\') {\r\n                rightButton.focus();\r\n            }\r\n        }\r\n    });\r\n};\r\nconst createGame = async (lvl, currentPage, elem) => {\r\n    const message = elem.querySelector(\'.message\');\r\n    if (getAuth()) {\r\n        showLoadSpinner(true);\r\n        await getWordsForRegisterMember(lvl, currentPage);\r\n    }\r\n    else {\r\n        if (lvl === HARD_WORDS_PAGE) {\r\n            clearAlerts(message);\r\n            outputAlert(message, AlertType.info, messageHardWords);\r\n            return;\r\n        }\r\n        showLoadSpinner(true);\r\n        sprintState.words = await generateWords(Number(lvl), currentPage);\r\n    }\r\n    if (sprintState.words.length) {\r\n        sprintState.wordsIndexes = sprintState.words.map((_, i) => i);\r\n        setDefaultSprintState();\r\n        sprintState.randomWords = chooseWords(sprintState.wordsIndexes);\r\n        elem.innerHTML = renderGame(sprintState.randomWords);\r\n        elem.querySelector(\'.choose-buttons\').focus();\r\n        startTimer();\r\n    }\r\n    else {\r\n        clearAlerts(message);\r\n        outputAlert(message, AlertType.info, messageNoWords);\r\n    }\r\n    showLoadSpinner(false);\r\n};\r\nconst getWordsForRegisterMember = async (lvl, currentPage) => {\r\n    if (lvl === HARD_WORDS_PAGE) {\r\n        sprintState.words = await getAllUserWordsWithData();\r\n    }\r\n    else {\r\n        sprintState.userWords = await getAllUserWords();\r\n        const allWords = await generateWords(Number(lvl), currentPage);\r\n        const wordsForGame = sprintState.userWords.filter((word) => word.difficulty === WordStatus.learned)\r\n            .map((word) => word.wordId);\r\n        sprintState.words = allWords.filter((word) => !wordsForGame.includes(word.id));\r\n    }\r\n};\r\nconst messageHardWords = \'Chapter 7 contains the most difficult words user selected manually. Please, <a href="#login" class="load-page-link">Login</a> or <a href="#register" class="load-page-link">Register</a> to start using this chapter.\';\r\nconst messageNoWords = \'You don\\\'t have words in this category! Choose other level.\';\r\n\n;// CONCATENATED MODULE: ./src/components/sprint-page/sprint-page.ts\n\r\n\r\nasync function getSprintPage() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'sprint-page\';\r\n    elem.append(await getSprintGame());\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/register-form/register-form.ts\n\r\n\r\n\r\n\r\nfunction register_form_eventHandler(elem) {\r\n    elem.onsubmit = async (e) => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        const { name, email, password } = target.elements;\r\n        const submitBtn = target.querySelector(\'button[type="submit"]\');\r\n        clearAlerts(elem);\r\n        submitBtn.disabled = true;\r\n        const creationResult = await createUser(name.value, email.value, password.value);\r\n        submitBtn.disabled = false;\r\n        if (\'errors\' in creationResult) {\r\n            outputResponseErrors(elem, creationResult);\r\n            return;\r\n        }\r\n        const loginResult = await loginUser(email.value, password.value);\r\n        if (\'errors\' in loginResult) {\r\n            outputResponseErrors(elem, loginResult);\r\n            return;\r\n        }\r\n        saveAuth(loginResult);\r\n        updateUserStatistic(createNewUserStatistic());\r\n        elem.dispatchEvent(new Event(\'authUpdate\', { bubbles: true }));\r\n    };\r\n}\r\nfunction register_form_getRegisterForm() {\r\n    const curAuth = getAuth();\r\n    const elem = document.createElement(\'form\');\r\n    elem.className = \'user-form register-form\';\r\n    if (curAuth) {\r\n        elem.innerHTML = `\n      <h3>Registration complete!</h3>\n      <p>Thank you for your registration. Now you are able to use all functions of RSLang application.</p>\n    `;\r\n        outputAlert(elem, AlertType.success, \'Success!\');\r\n    }\r\n    else {\r\n        elem.innerHTML = `\n      <div class="mb-3">\n        <label for="register-form-name" class="form-label">\n          User name\n          <span class="asterisk" title="Required field">*<span>\n        </label>\n        <input name="name" type="text" class="form-control" id="register-form-name" required>\n      </div>\n      <div class="mb-3">\n        <label for="register-form-email" class="form-label">\n          Email address\n          <span class="asterisk" title="Required field">*<span>\n        </label>\n        <input name="email" type="email" class="form-control" id="register-form-email" aria-describedby="emailHelp" required>\n        <div id="emailHelp" class="form-text">We\'ll never share your email with anyone else.</div>\n      </div>\n      <div class="mb-3">\n        <label for="register-form-password" class="form-label">\n          Password\n          <span class="asterisk" title="Required field">*<span>\n        </label>\n        <input name="password" type="password" pattern=".{8,}" class="form-control" id="register-form-password" aria-describedby="passHelp" title="8 characters minimum" required>\n        <div id="passHelp" class="form-text">Password must be 8 characters minimum.</div>\n      </div>\n      <button type="submit" class="btn btn-primary">\n        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n        Register\n      </button>\n    `;\r\n    }\r\n    register_form_eventHandler(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/register-page/register-page.ts\n\r\n\r\nfunction register_page_getRegisterPage() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'register-page\';\r\n    elem.innerHTML = `\n    <div class="container">\n      <h1 class="page-heading">\n        <span class="page-heading__rslang">RSLang</span> Register\n      </h1>\n    </div>\n  `;\r\n    const container = elem.querySelector(\'.container\');\r\n    container.append(register_form_getRegisterForm());\r\n    elem.append(getFooter());\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/controlGameWindow/controlGameWindow.ts\nfunction controlGameWindow() {\r\n    const gameWindow = document.querySelector(\'.game-window\');\r\n    const levelMenu = document.querySelector(\'.buttons-level-block\');\r\n    gameWindow?.classList.remove(\'game-window--hidden\');\r\n    levelMenu?.classList.add(\'buttons-level-block--hidden\');\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/createMenuGame.ts\nfunction createMenuGame(previousBookStudy) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'audio-call-game container\';\r\n    const meaningfulName1 = `\n  <h1 class="page-heading"><span class="page-heading__rslang">RSLang</span> Audio-call</h1>\n  <div class="buttons-level-block">\n    <h2>Levels</h2>\n    <p>From Easy to most Hard</p>\n    <ol class="btn-wrapper level-menu">\n      <li><button class="btn btn-primary btn-select-level" data-level="0">1</button></li>\n      <li><button class="btn btn-primary btn-select-level" data-level="1">2</button></li>\n      <li><button class="btn btn-primary btn-select-level" data-level="2">3</button></li>\n      <li><button class="btn btn-primary btn-select-level" data-level="3">4</button></li>\n      <li><button class="btn btn-primary btn-select-level" data-level="4">5</button></li>\n      <li><button class="btn btn-primary btn-select-level" data-level="5">6</button></li>\n      <li><button class="btn btn-danger btn-select-level" data-level="6">7</button></li>\n    </ol>\n    <p class="audio-call-info">\n      Game controls: you can play with both, mouse/touchpad and keyboard.<br>\n      Use keys from <kbd>1</kbd> to <kbd>5</kbd> to answer questions and <kbd>Enter</kbd> key to activate \'I do not know\' button and skip to the next question.<br>\n      To hear the given word press <kbd>Spacebar</kbd>.\n    <p>\n  </div>\n  <div class="audio-call-message"></div>\n  <div class="game-window game-window--hidden"></div>\n  `;\r\n    const meaningfulName2 = `\n    <h1 class="page-heading"><span class="page-heading__rslang">RSLang</span> Audio-call</h1>\n    <div class="game-window"></div>\n  `;\r\n    elem.innerHTML = previousBookStudy ? meaningfulName2 : meaningfulName1;\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/sendingToServer/sendingToServer.ts\n\r\n\r\n\r\nconst NUMBER_FOR_LEARNED_WORD = 3;\r\nconst NUMBER_OF_WORDS_TO_PLAY = 20;\r\nasync function sendDataToServer(correctAnswersList, wrongAnswersList, gameState) {\r\n    const userStatistics = await getUserStatistic();\r\n    const gameStatistics = getTodayStat(userStatistics, \'audiocall\');\r\n    const wordStatistics = getTodayStat(userStatistics, \'words\');\r\n    await updateWordStatistic(correctAnswersList, wrongAnswersList, wordStatistics);\r\n    await updateGameStatistic(gameStatistics, wordStatistics, correctAnswersList, wrongAnswersList, gameState, userStatistics);\r\n}\r\nasync function updateWordStatistic(correctAnswersList, wrongAnswersList, wordStatistics) {\r\n    const arrayPromise = [];\r\n    correctAnswersList.forEach(async (el) => {\r\n        const optionals = {\r\n            difficulty: el.userWord ? el.userWord.difficulty : WordStatus["default"],\r\n            optional: {\r\n                guessedRight: el.userWord ? el.userWord.optional.guessedRight + 1 : 1,\r\n                guessedWrong: el.userWord ? el.userWord.optional.guessedWrong : 0,\r\n                guessedInRow: el.userWord ? el.userWord.optional.guessedInRow + 1 : 1,\r\n            },\r\n        };\r\n        if (optionals.optional.guessedInRow >= NUMBER_FOR_LEARNED_WORD && optionals.difficulty !== WordStatus.learned) {\r\n            optionals.difficulty = WordStatus.learned;\r\n            wordStatistics.learnedWordsQty += 1;\r\n        }\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        arrayPromise.push(updateUserWord(el.id || el._id, optionals));\r\n    });\r\n    wrongAnswersList.forEach((el) => {\r\n        const optionals = {\r\n            difficulty: el.userWord ? el.userWord.difficulty : WordStatus["default"],\r\n            optional: {\r\n                guessedRight: el.userWord ? el.userWord.optional.guessedRight : 0,\r\n                guessedWrong: el.userWord ? el.userWord.optional.guessedWrong + 1 : 1,\r\n                guessedInRow: 0,\r\n            },\r\n        };\r\n        if (optionals.difficulty === WordStatus.learned) {\r\n            optionals.difficulty = WordStatus["default"];\r\n            wordStatistics.learnedWordsQty -= 1;\r\n        }\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        arrayPromise.push(updateUserWord(el.id || el._id, optionals));\r\n    });\r\n    await Promise.all(arrayPromise);\r\n}\r\nasync function updateGameStatistic(gameStatistics, wordStatistics, correctAnswersList, wrongAnswersList, gameState, userStatistics) {\r\n    userStatistics.learnedWords = wordStatistics.learnedWordsQty;\r\n    userStatistics.optional.audiocall.stat[0].longestRow = gameStatistics.longestRow < gameState.longestStreakForGame ? gameState.longestStreakForGame : gameStatistics.longestRow;\r\n    userStatistics.optional.audiocall.stat[0].rightAnswers += correctAnswersList.length;\r\n    userStatistics.optional.audiocall.stat[0].wrongAnswers += wrongAnswersList.length;\r\n    userStatistics.optional.audiocall.stat[0].newWordsQty += +gameState.newWords;\r\n    userStatistics.optional.words.stat[0].newWordsQty += +gameState.newWords;\r\n    userStatistics.optional.words.stat[0].rightAnswers += correctAnswersList.length;\r\n    userStatistics.optional.words.stat[0].wrongAnswers += +wrongAnswersList.length;\r\n    await updateUserStatistic(userStatistics);\r\n}\r\nasync function getAuthWords(currentLevel, currentPage) {\r\n    const words = [];\r\n    async function getMoreWords(level, page) {\r\n        const filter = `{"$and":[{"userWord.difficulty": {"$not": {"$eq": "learned"}}},{"page":${page}},{"group": ${level}}]}`;\r\n        const resp = await getAggregatedWords(filter, NUMBER_OF_WORDS_TO_PLAY);\r\n        let result = resp[0].paginatedResults;\r\n        if (words.length + result.length > NUMBER_OF_WORDS_TO_PLAY) {\r\n            const length = words.length + result.length - NUMBER_OF_WORDS_TO_PLAY;\r\n            result = result.splice(length);\r\n        }\r\n        words.push(...result);\r\n        if (page - 1 >= 0 && words.length < NUMBER_OF_WORDS_TO_PLAY) {\r\n            await getMoreWords(level, page - 1);\r\n        }\r\n    }\r\n    await getMoreWords(+currentLevel, +currentPage);\r\n    return words.flat(Infinity);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/startNewGame/generateWindowGame/getRandomWords/getRandomWords.ts\nfunction getRandomWords(currentWord, listWords) {\r\n    let maxAmountAnswers = 5;\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    const list = [[currentWord.wordTranslate, currentWord.id || currentWord._id]];\r\n    if (maxAmountAnswers > listWords.length) {\r\n        maxAmountAnswers = listWords.length;\r\n    }\r\n    while (list.length < maxAmountAnswers) {\r\n        const randomIndex = Math.trunc(Math.random() * listWords.length);\r\n        const newWord = listWords[randomIndex].wordTranslate;\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        const idWord = listWords[randomIndex].id || listWords[randomIndex]._id;\r\n        if (list.every((el) => el[0] !== newWord)) {\r\n            list.push([newWord, idWord]);\r\n        }\r\n    }\r\n    return list.sort(() => Math.random() - 0.5);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/startNewGame/addEventsForChoiceButtons/showCurrentWordInfo/showCurrentWordInfo.ts\nfunction showCurrentWordInfo() {\r\n    const wordInfo = document.querySelector(\'.current-word-info\');\r\n    wordInfo?.classList.remove(\'current-word-info--hidden\');\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/startNewGame/addEventsForChoiceButtons/hideAnswerButtons/hideAnswerButtons.ts\nfunction hideAnswerButtons() {\r\n    const buttonsChoice = document.querySelectorAll(\'.btn-choice-of-answer\');\r\n    buttonsChoice.forEach((button) => {\r\n        button.setAttribute(\'disabled\', \'true\');\r\n    });\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/startNewGame/addEventsForChoiceButtons/addEventsForChoiceButtons.ts\n\r\n\r\nconst CHECK_ICON = \'\\u2713\';\r\nconst WRONG_ICON = \'\\u2716\';\r\nconst NEXT_QUESTION = \'Next question\';\r\nconst KeyMapper = {\r\n    Digit1: \'Digit1\',\r\n    Digit2: \'Digit2\',\r\n    Digit3: \'Digit3\',\r\n    Digit4: \'Digit4\',\r\n    Digit5: \'Digit5\',\r\n    Enter: \'Enter\',\r\n    Space: \'Space\',\r\n};\r\nfunction addEventsForChoiceButtons(currentWord, gameState, correctWord) {\r\n    const buttonsChoiceWrapper = document.querySelector(\'.row-buttons-choice-wrapper\');\r\n    const buttonsChoice = document.querySelectorAll(\'.btn-choice-of-answer\');\r\n    buttonsChoiceWrapper?.addEventListener(\'click\', async (e) => checkAnswer(e, \'click\', buttonsChoice, currentWord, gameState, correctWord));\r\n}\r\nasync function checkAnswer(e, eventExecutor, buttonsChoice, currentWord, gameState, correctWord) {\r\n    const button = e.target;\r\n    if (!button.classList.contains(\'btn-choice-of-answer\') && eventExecutor === \'click\') {\r\n        return;\r\n    }\r\n    const currentButton = getCheckButton(e, eventExecutor);\r\n    const buttonNextQuestion = document.querySelector(\'.btn-next-question\');\r\n    if (!currentButton || currentButton.hasAttribute(\'disabled\')) {\r\n        return;\r\n    }\r\n    hideAnswerButtons();\r\n    wordDistribution(currentButton, currentWord, gameState, correctWord);\r\n    showCurrentWordInfo();\r\n    buttonNextQuestion.textContent = NEXT_QUESTION;\r\n}\r\nfunction getCheckButton(e, eventExecutor) {\r\n    const buttonNextQuestion = document.querySelector(\'.btn-next-question\');\r\n    if (!buttonNextQuestion) {\r\n        return null;\r\n    }\r\n    if (eventExecutor === \'key\') {\r\n        const valuesKeyTargets = [\'Digit1\', \'Digit2\', \'Digit3\', \'Digit4\', \'Digit5\'];\r\n        const keyTarget = e.code;\r\n        if (keyTarget === KeyMapper.Enter) {\r\n            buttonNextQuestion?.dispatchEvent(new Event(\'checkNextQuestion\'));\r\n            return null;\r\n        }\r\n        if (keyTarget === KeyMapper.Space) {\r\n            const button = document.querySelector(\'.button-audio\');\r\n            button?.dispatchEvent(new Event(\'play\'));\r\n        }\r\n        if (Object.keys(KeyMapper).includes(keyTarget)) {\r\n            const numberButton = valuesKeyTargets.indexOf(keyTarget);\r\n            const allButtons = document.querySelectorAll(\'.btn-choice-of-answer\');\r\n            const currentButton = allButtons[numberButton];\r\n            buttonNextQuestion.dataset.status = \'true\';\r\n            buttonNextQuestion.dataset.wordchosen = \'true\';\r\n            return currentButton;\r\n        }\r\n    }\r\n    else if (eventExecutor === \'click\') {\r\n        buttonNextQuestion.dataset.status = \'true\';\r\n        buttonNextQuestion.dataset.wordchosen = \'true\';\r\n        return e.target;\r\n    }\r\n    return null;\r\n}\r\nfunction addEventsForKeyboard(currentWord, gameState, correctWord) {\r\n    const buttonsChoice = document.querySelectorAll(\'.btn-choice-of-answer\');\r\n    const gamePage = document.querySelector(\'.row-buttons-choice-wrapper\');\r\n    gamePage.focus({ preventScroll: true });\r\n    gamePage.addEventListener(\'keyup\', (e) => {\r\n        checkAnswer(e, \'key\', buttonsChoice, currentWord, gameState, correctWord);\r\n    });\r\n    gamePage.addEventListener(\'blur\', () => {\r\n        gamePage.focus({ preventScroll: true });\r\n    });\r\n}\r\nasync function wordDistribution(currentButton, currentWord, gameState, correctWord) {\r\n    const buttonWord = currentButton.textContent;\r\n    const currentIcon = document.createElement(\'span\');\r\n    const word = correctWord;\r\n    if (buttonWord === currentWord) {\r\n        gameState.correctAnswers.push(word);\r\n        gameState.counterStreakForGame += 1;\r\n        if (gameState.counterStreakForGame > gameState.longestStreakForGame) {\r\n            gameState.longestStreakForGame = gameState.counterStreakForGame;\r\n        }\r\n        currentIcon.classList.add(\'correct-icon-audiocall\');\r\n        currentIcon.textContent = CHECK_ICON;\r\n        currentButton.prepend(currentIcon);\r\n        currentButton.classList.add(\'btn-success\');\r\n        currentButton.classList.remove(\'btn-light\');\r\n    }\r\n    else {\r\n        gameState.wrongAnswers.push(word);\r\n        gameState.counterStreakForGame = 0;\r\n        currentIcon.classList.add(\'wrong-icon-audiocall\');\r\n        currentIcon.textContent = WRONG_ICON;\r\n        currentButton.prepend(currentIcon);\r\n        currentButton.classList.remove(\'btn-light\');\r\n        currentButton.classList.add(\'btn-danger\');\r\n    }\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/startNewGame/generateWindowGame/generateWindowGame.ts\n\r\n\r\n\r\n\r\nasync function generateWindowGame(currentWord, arrayWords, gameState) {\r\n    const windowGame = document.querySelector(\'.game-window\');\r\n    const { audio, word, image, transcription, wordTranslate, } = currentWord;\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    const id = currentWord.id || currentWord._id;\r\n    const imageResponse = `${SOURCE}/${image}`;\r\n    const listRandomWords = getRandomWords(currentWord, arrayWords);\r\n    windowGame.innerHTML = `\n    <div class="container text-center">\n      <div class="row">\n        <div class="col current-word">\n          <button id="playAudio" type="button" class="btn button-audio">\n            <img class="audiocall-speaker-image" src="assets/speaker-icon.svg" alt="speaker">\n          </button>\n          <div data-id=${id} class="card current-word-info current-word-info--hidden">\n            <img src="${imageResponse}" class="card-img-top" alt="Word">\n            <div class="card-body">\n              <p class="card-text">${word}, (${transcription}), ${wordTranslate}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div tabindex="-1" class="row row-buttons-choice-wrapper">\n      </div>\n    </div>\n  `;\r\n    const fragmentButton = document.createDocumentFragment();\r\n    const buttonsWrapper = windowGame.querySelector(\'.row-buttons-choice-wrapper\');\r\n    listRandomWords.forEach((el) => {\r\n        const answerVariant = document.createElement(\'div\');\r\n        answerVariant.classList.add(\'col\');\r\n        answerVariant.innerHTML = `\n      <button  type="button" data-id="${el[1]}" class="btn btn-light btn-choice-of-answer">${el[0]}</button>\n    `;\r\n        fragmentButton.append(answerVariant);\r\n    });\r\n    buttonsWrapper?.append(fragmentButton);\r\n    await playAudio(audio);\r\n    const buttonAudio = document.getElementById(\'playAudio\');\r\n    buttonAudio?.addEventListener(\'click\', () => playAudio(audio));\r\n    buttonAudio?.addEventListener(\'play\', () => playAudio(audio));\r\n    addEventsForChoiceButtons(wordTranslate, gameState, currentWord);\r\n    addEventsForKeyboard(wordTranslate, gameState, currentWord);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-game/game/startNewGame/game.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MAX_PAGE_NUM = 30;\r\nconst USER_LEVEL = 6;\r\nconst game_NEXT_QUESTION = \'Next question\';\r\nconst SKIP = \'Skip\';\r\nconst WORD_AMOUNT_FOR_PAGE = 20;\r\nasync function startNewGame(event, startPage) {\r\n    // play for menu level\r\n    const statusAuth = getAuth();\r\n    if (event) {\r\n        if (!event?.target.classList.contains(\'btn-select-level\')) {\r\n            return;\r\n        }\r\n        const level = +event.target.dataset.level;\r\n        showLoadSpinner(true);\r\n        if (!statusAuth && +event.target.dataset.level === USER_LEVEL) {\r\n            if (document.querySelector(\'.info-no-auth\')) {\r\n                showLoadSpinner(false);\r\n                return;\r\n            }\r\n            getModalNoAuth();\r\n            showLoadSpinner(false);\r\n            return;\r\n        }\r\n        if (level === USER_LEVEL && statusAuth) {\r\n            const listWords = await getAllUserWordsWithData();\r\n            if (listWords.length === 0) {\r\n                showLoadSpinner(false);\r\n                addTitleNoHardWords();\r\n                return;\r\n            }\r\n        }\r\n        document.querySelector(\'.audio-call-message\')?.remove();\r\n        document.querySelector(\'.info-no-auth\')?.remove();\r\n        const buttonCheck = event.target;\r\n        const buttonsWrapper = document.querySelector(\'.button-wrapper-audiocall\');\r\n        buttonsWrapper?.remove();\r\n        checkNoWardsTitle();\r\n        const blockButtonNextQuestion = getButtonNextQuestion();\r\n        const windowGameBlock = document.querySelector(\'.audio-call-game\');\r\n        const state = {\r\n            correctAnswers: [],\r\n            wrongAnswers: [],\r\n            currentLevel: +buttonCheck.dataset.level,\r\n            counterStreakForGame: 0,\r\n            longestStreakForGame: 0,\r\n            newWords: 0,\r\n        };\r\n        if (buttonCheck.classList.contains(\'btn-select-level\') || buttonCheck.classList.contains(\'btn-play-again\')) {\r\n            const currentLevel = (buttonCheck.dataset.level);\r\n            if (currentLevel) {\r\n                const randomPage = Math.trunc(Math.random() * MAX_PAGE_NUM);\r\n                updateState(\'indexWord\', 0);\r\n                let listWords;\r\n                if (statusAuth) {\r\n                    if (+currentLevel === USER_LEVEL) {\r\n                        listWords = await getAllUserWordsWithData();\r\n                    }\r\n                    else {\r\n                        const aggregatedWords = await getAggregatedWords(undefined, WORD_AMOUNT_FOR_PAGE, +currentLevel, randomPage);\r\n                        listWords = aggregatedWords[0].paginatedResults;\r\n                    }\r\n                    state.newWords = await checkNewWords(listWords);\r\n                }\r\n                else {\r\n                    listWords = await getWords(+currentLevel, randomPage);\r\n                }\r\n                if (checkWrongStartGame(listWords)) {\r\n                    return;\r\n                }\r\n                listWords = shuffleArrayRandom(listWords);\r\n                await generateWindowGame(listWords[0], listWords, state);\r\n                windowGameBlock?.append(blockButtonNextQuestion);\r\n                addEventsForNextQuestionButton(windowGameBlock, listWords, state);\r\n                controlGameWindow();\r\n                showLoadSpinner(false);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // play for study-book\r\n        showLoadSpinner(true);\r\n        const currentPage = getState().studyBookPage;\r\n        const currentChapter = getState().studyBookChapter;\r\n        const blockButtonNextQuestion = getButtonNextQuestion();\r\n        const windowGameBlock = startPage?.querySelector(\'.audio-call-game\');\r\n        const state = {\r\n            correctAnswers: [],\r\n            wrongAnswers: [],\r\n            currentLevel: +currentPage,\r\n            counterStreakForGame: 0,\r\n            longestStreakForGame: 0,\r\n            newWords: 0,\r\n        };\r\n        updateState(\'indexWord\', 0);\r\n        let listWords;\r\n        if (currentChapter === USER_LEVEL && statusAuth) {\r\n            listWords = await getAllUserWordsWithData();\r\n            await checkNewWords(listWords);\r\n        }\r\n        else {\r\n            listWords = statusAuth ? await getAuthWords(currentChapter, currentPage) : await getWords(currentChapter, currentPage);\r\n        }\r\n        listWords = shuffleArrayRandom(listWords);\r\n        state.newWords = statusAuth ? await checkNewWords(listWords) : 0;\r\n        await generateWindowGame(listWords[0], listWords, state);\r\n        windowGameBlock?.append(blockButtonNextQuestion);\r\n        addEventsForNextQuestionButton(windowGameBlock, listWords, state);\r\n        controlGameWindow();\r\n        showLoadSpinner(false);\r\n    }\r\n}\r\nfunction addEventsForNextQuestionButton(windowGameBlock, listWords, gameState) {\r\n    const buttonNextQuestion = windowGameBlock.querySelector(\'.btn-next-question\');\r\n    buttonNextQuestion.dataset.wordchosen = \'false\';\r\n    handleEventsForNextQuestionButton(buttonNextQuestion, listWords, gameState);\r\n}\r\nfunction handleEventsForNextQuestionButton(buttonNextQuestion, listWords, gameState) {\r\n    buttonNextQuestion?.addEventListener(\'click\', (e) => {\r\n        checkNextQuestion(e, buttonNextQuestion, listWords, gameState);\r\n    });\r\n    buttonNextQuestion.addEventListener(\'checkNextQuestion\', (e) => {\r\n        checkNextQuestion(e, buttonNextQuestion, listWords, gameState);\r\n    });\r\n}\r\nfunction clearGameWindow() {\r\n    const gameWindow = document.querySelector(\'.game-window\');\r\n    if (document.querySelector(\'.game-window\')) {\r\n        gameWindow.innerHTML = \'\';\r\n    }\r\n}\r\nfunction getNewWindowGame() {\r\n    const previousPage = getState().page;\r\n    let menu = document.querySelector(\'.audio-call-page\');\r\n    if (!menu) {\r\n        menu = document.createElement(\'div\');\r\n        menu.classList.add(\'audio-call-page\');\r\n    }\r\n    if (previousPage === \'study-book\') {\r\n        menu.append(createMenuGame(true));\r\n        startNewGame(null, menu);\r\n    }\r\n    else {\r\n        menu.append(createMenuGame(false));\r\n        const menuLevels = menu.querySelector(\'.btn-wrapper\');\r\n        menuLevels?.addEventListener(\'click\', (e) => startNewGame(e, undefined));\r\n    }\r\n    return menu;\r\n}\r\nfunction addAllAnswersForPage(list, blockList) {\r\n    const fragment = document.createDocumentFragment();\r\n    list.forEach((el) => {\r\n        const listItem = document.createElement(\'li\');\r\n        listItem.classList.add(\'list-group-item\');\r\n        listItem.innerHTML = `<button class="button-audio-result"><img class="button-audio-image" src="assets/speaker-icon.svg"></button> ${el.word} | ${el.wordTranslate}`;\r\n        const buttonAudio = listItem.querySelector(\'.button-audio-result\');\r\n        buttonAudio?.addEventListener(\'click\', () => {\r\n            playAudio(el.audio);\r\n        });\r\n        fragment.append(listItem);\r\n    });\r\n    blockList.append(fragment);\r\n}\r\nfunction getModalResultGame(gameState) {\r\n    const modalResultGame = document.createElement(\'div\');\r\n    modalResultGame.classList.add(\'popup-winner-audio-call\');\r\n    modalResultGame.innerHTML = `\n    <div id="modal-winner" class="modal-body">\n      <h3>Your longest string of guessed ${gameState.longestStreakForGame} words!</h3>\n      <h3>Correct answers (${gameState.correctAnswers.length})</h3>\n      <ul class="list-group list-group-correct">\n      </ul>\n      <h3>Wrong answers (${gameState.wrongAnswers.length})</h3>\n      <ul class="list-group list-group-wrong">\n      </ul>\n      <button type="button" data-level="${gameState.currentLevel}" class="btn btn-play-again btn-primary">Play again</button>\n    </div>\n  `;\r\n    return modalResultGame;\r\n}\r\nfunction playAgainButtonClickHandler(modalResultGame) {\r\n    const buttonPlayAgain = modalResultGame.querySelector(\'.btn-play-again\');\r\n    buttonPlayAgain?.addEventListener(\'click\', () => {\r\n        const wrapper = document.querySelector(\'.audio-call-page\');\r\n        wrapper.innerHTML = \'\';\r\n        clearGameWindow();\r\n        getNewWindowGame();\r\n    });\r\n}\r\nasync function showResult(modalResultGame, gameState) {\r\n    const buttonNextQuestion = document.querySelector(\'.btn-next-question\');\r\n    const parentModal = document.querySelector(\'.game-window\');\r\n    const blockListCorrect = modalResultGame.querySelector(\'.list-group-correct\');\r\n    const blockListWrong = modalResultGame.querySelector(\'.list-group-wrong\');\r\n    const { correctAnswers, wrongAnswers } = gameState;\r\n    if (getAuth()) {\r\n        await sendDataToServer(correctAnswers, wrongAnswers, gameState);\r\n    }\r\n    addAllAnswersForPage(correctAnswers, blockListCorrect);\r\n    addAllAnswersForPage(wrongAnswers, blockListWrong);\r\n    buttonNextQuestion?.remove();\r\n    parentModal?.append(modalResultGame);\r\n}\r\nasync function checkNextQuestion(e, buttonNextQuestion, listWords, gameState) {\r\n    const currentIndex = getState().indexWord + 1;\r\n    if (currentIndex >= listWords.length && buttonNextQuestion.dataset.status === \'true\') {\r\n        document.querySelector(\'.button-wrapper-audiocall\')?.remove();\r\n        showLoadSpinner(true);\r\n        clearGameWindow();\r\n        const modalGameResult = getModalResultGame(gameState);\r\n        playAgainButtonClickHandler(modalGameResult);\r\n        await showResult(modalGameResult, gameState);\r\n        updateState(\'indexWord\', currentIndex);\r\n        showLoadSpinner(false);\r\n    }\r\n    else if (buttonNextQuestion.dataset.wordchosen === \'false\') {\r\n        hideAnswerButtons();\r\n        showCurrentWordInfo();\r\n        buttonNextQuestion.textContent = game_NEXT_QUESTION;\r\n        buttonNextQuestion.dataset.wordchosen = \'true\';\r\n        buttonNextQuestion.dataset.status = \'true\';\r\n        const wordId = document.querySelector(\'.current-word-info\').dataset.id;\r\n        const word = getAuth() ? await getAggregatedWord(wordId) : await getWord(wordId);\r\n        gameState.wrongAnswers.push(word);\r\n    }\r\n    else {\r\n        buttonNextQuestion.textContent = SKIP;\r\n        buttonNextQuestion.dataset.status = \'false\';\r\n        buttonNextQuestion.dataset.wordchosen = \'false\';\r\n        clearGameWindow();\r\n        generateWindowGame(listWords[currentIndex], listWords, gameState);\r\n        updateState(\'indexWord\', currentIndex);\r\n    }\r\n}\r\nasync function checkNewWords(array) {\r\n    let counterNewWords = 0;\r\n    const promiseArray = [];\r\n    for (let i = 0; i < array.length; i += 1) {\r\n        const el = array[i];\r\n        if (el.userWord) {\r\n            if (!el.userWord.optional.guessedWrong && !el.userWord.optional.guessedRight) {\r\n                counterNewWords += 1;\r\n            }\r\n        }\r\n        else {\r\n            const defaultOptional = {\r\n                guessedInRow: 0,\r\n                guessedRight: 0,\r\n                guessedWrong: 0,\r\n            };\r\n            counterNewWords += 1;\r\n            // eslint-disable-next-line no-underscore-dangle\r\n            promiseArray.push(setWordOptional(el._id, defaultOptional));\r\n        }\r\n    }\r\n    await Promise.all(promiseArray);\r\n    return counterNewWords;\r\n}\r\nfunction addTitleNoHardWords() {\r\n    const modalInfo = document.querySelector(\'.audio-call-message\');\r\n    clearAlerts(modalInfo);\r\n    const text = \'You do not have hard words! Learn more in the  <a class="load-page-link" href="#study-book">study book</a>!\';\r\n    outputAlert(modalInfo, AlertType.info, text);\r\n}\r\nfunction checkNoWardsTitle() {\r\n    const elem = document.querySelector(\'.no-hard-words-info\');\r\n    if (elem) {\r\n        elem.remove();\r\n    }\r\n}\r\nfunction getButtonNextQuestion() {\r\n    const blockButtonNextQuestion = document.createElement(\'div\');\r\n    blockButtonNextQuestion.classList.add(\'button-wrapper-audiocall\');\r\n    blockButtonNextQuestion.innerHTML = `\n    <button type="button" data-status="false" class="btn btn-primary btn-next-question">${SKIP}</button>\n  `;\r\n    return blockButtonNextQuestion;\r\n}\r\nfunction getModalNoAuth() {\r\n    const modalInfo = document.querySelector(\'.audio-call-message\');\r\n    clearAlerts(modalInfo);\r\n    const text = \'Chapter 7 contains the most difficult words user selected manually. Please, <a class="load-page-link" href="#login">Login</a> or <a class="load-page-link" href="#register">Register</a> to start using this chapter.\';\r\n    outputAlert(modalInfo, AlertType.info, text);\r\n}\r\nfunction checkWrongStartGame(listWords) {\r\n    if (!listWords.length) {\r\n        if (document.querySelector(\'.info-no-auth\')) {\r\n            showLoadSpinner(false);\r\n            return true;\r\n        }\r\n        if (document.querySelector(\'.no-hard-words-info\')) {\r\n            return true;\r\n        }\r\n    }\r\n    showLoadSpinner(false);\r\n    return false;\r\n}\r\nfunction shuffleArrayRandom(array) {\r\n    return array.sort(() => Math.random() - 0.5);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/audio-call-page/audio-call-page.ts\n\r\n\r\nasync function getAudioCallPage() {\r\n    document.querySelector(\'.audio-call-page\')?.remove();\r\n    const elem = getNewWindowGame();\r\n    elem.className = \'audio-call-page\';\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/mini-games-menu/mini-games-menu.ts\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getMiniGamesMenu() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'mini-games-menu\';\r\n    elem.innerHTML = `\n    <h2>Mini-Games</h2>\n    <p>Start playing from here</p>\n    <button class="btn btn-primary game" data-link="audio-call">Audio-Call</button>\n    <button class="btn btn-primary game" data-link="sprint">Sprint</button>\n  `;\r\n    handleMiniGamesMenu(elem);\r\n    return elem;\r\n}\r\nconst handleMiniGamesMenu = (elem) => {\r\n    elem.addEventListener(\'click\', async (event) => {\r\n        const target = event.target;\r\n        if (target.classList.contains(\'game\')) {\r\n            const { link } = target.dataset;\r\n            document.body.innerHTML = \'\';\r\n            const fragment = new DocumentFragment();\r\n            fragment.append(getHeader());\r\n            if (link === PageName.sprint) {\r\n                fragment.append(await getSprintPage());\r\n            }\r\n            if (link === PageName.audioCall) {\r\n                fragment.append(await getAudioCallPage());\r\n            }\r\n            document.body.append(fragment);\r\n            updateState(\'page\', link);\r\n        }\r\n    });\r\n};\r\n\n;// CONCATENATED MODULE: ./src/components/word-audio/word-audio.ts\n\r\n\r\nfunction updateBtnAudioNum(audioBtn) {\r\n    const curAudioNum = Number(audioBtn.dataset.audio);\r\n    const newAudioNum = curAudioNum >= 3 ? \'1\' : `${curAudioNum + 1}`;\r\n    audioBtn.dataset.audio = newAudioNum;\r\n}\r\nfunction word_audio_playAudio(e) {\r\n    const audioTitles = [\'Pronunciation\', \'Meaning\', \'Example\'];\r\n    const audioBtn = e.currentTarget;\r\n    audioBtn.disabled = true;\r\n    audioBtn.classList.add(\'btn-audio--playing\');\r\n    const audioNum = Number(audioBtn.dataset.audio);\r\n    const audioContainer = audioBtn.parentElement;\r\n    const audio = audioContainer.querySelector(`input[name="audio-${audioNum}`);\r\n    const audioUrl = audio.value;\r\n    const url = `${SOURCE}/${audioUrl}`;\r\n    const audioTitle = audioBtn.querySelector(\'.btn-audio__audio-title\');\r\n    audioTitle.innerText = audioTitles[audioNum - 1];\r\n    const music = new Audio(url);\r\n    music.play();\r\n    music.onended = () => {\r\n        audioBtn.disabled = false;\r\n        audioBtn.classList.remove(\'btn-audio--playing\');\r\n        updateBtnAudioNum(audioBtn);\r\n    };\r\n}\r\nfunction word_audio_handleEvents(elem) {\r\n    const btnAudio = elem.querySelector(\'.btn-audio\');\r\n    btnAudio.addEventListener(\'click\', word_audio_playAudio);\r\n}\r\nfunction getWordAudio(word) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'word-audio\';\r\n    elem.innerHTML = `\n    <button class="btn-audio" data-id="${word.id}" data-audio="1">\n      <img class="btn-audio__speaker-icon" src="assets/speaker-icon.svg">\n      <div class="btn-audio__audio-title"></div>\n    </button>\n    <input type="hidden" name="audio-1" value="${word.audio}">\n    <input type="hidden" name="audio-2" value="${word.audioMeaning}">\n    <input type="hidden" name="audio-3" value="${word.audioExample}">\n  `;\r\n    word_audio_handleEvents(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/status-badge/cross.svg\nconst cross_namespaceObject = __webpack_require__.p + "assets/cross-15b0285faa01d3a9ee74.svg";\n;// CONCATENATED MODULE: ./src/components/status-badge/status-badge.ts\n\r\n\r\n\r\n\r\n\r\n\r\nasync function markDefault(e) {\r\n    const { isUserChapter } = getState();\r\n    const target = e.currentTarget;\r\n    const wordId = target.dataset.id;\r\n    const wordCard = target.closest(\'.word-card\');\r\n    const optional = {};\r\n    target.disabled = true;\r\n    if (wordCard.dataset.status === WordStatus.learned) {\r\n        optional.guessedInRow = 0;\r\n        await updateLearnedStatistic(-1);\r\n    }\r\n    await setWordStatusAndOptional(wordId, WordStatus["default"], optional);\r\n    target.disabled = false;\r\n    target.dispatchEvent(new Event(isUserChapter ? \'deleteWordCard\' : \'updateWordCard\', { bubbles: true }));\r\n}\r\nfunction status_badge_handleEvents(elem) {\r\n    elem.addEventListener(\'click\', markDefault);\r\n}\r\nfunction getStatusBadge(word) {\r\n    const elem = document.createElement(\'button\');\r\n    elem.className = `status-badge status-badge--${word.userWord.difficulty}`;\r\n    elem.dataset.id = word.id;\r\n    elem.title = \'Remove\';\r\n    elem.innerHTML = `\n    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n    ${word.userWord.difficulty}\n    <img class="status-badge__cross-icon" src="${cross_namespaceObject}">\n  `;\r\n    status_badge_handleEvents(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/word-statistic/word-statistic.ts\n\r\nfunction getWordStatistic(word) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'word-stat-container\';\r\n    elem.innerHTML = `\n    <div class="word-stat word-stat--wrong" title="Guessed Wrong" data-bs-toggle="tooltip">\n      ${word.userWord.optional.guessedWrong}\n    </div>\n    <div class="word-stat word-stat--right" title="Guessed Right" data-bs-toggle="tooltip">\n      ${word.userWord.optional.guessedRight}\n    </div>\n    <div class="word-stat word-stat--row" title="Guessed in a row" data-bs-toggle="tooltip">\n      ${word.userWord.optional.guessedInRow}\n    </div>\n  `;\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/word-status-controls/word-status-controls.ts\n\r\n\r\n\r\n\r\nasync function markHard(e) {\r\n    const target = e.target;\r\n    const wordId = target.dataset.id;\r\n    const wordCard = target.closest(\'.word-card\');\r\n    target.disabled = true;\r\n    await setWordStatus(wordId, WordStatus.hard);\r\n    if (wordCard.dataset.status === WordStatus.learned) {\r\n        await updateLearnedStatistic(-1);\r\n    }\r\n    target.disabled = false;\r\n    target.dispatchEvent(new Event(\'updateWordCard\', { bubbles: true }));\r\n}\r\nasync function markLearned(e) {\r\n    const { isUserChapter } = getState();\r\n    const target = e.target;\r\n    const wordId = target.dataset.id;\r\n    target.disabled = true;\r\n    await setWordStatus(wordId, WordStatus.learned);\r\n    await updateLearnedStatistic(+1);\r\n    target.disabled = false;\r\n    target.dispatchEvent(new Event(isUserChapter ? \'deleteWordCard\' : \'updateWordCard\', { bubbles: true }));\r\n}\r\nfunction word_status_controls_handleEvents(elem) {\r\n    const { isUserChapter } = getState();\r\n    const btnMarkDifficult = elem.querySelector(\'.btn-mark-hard\');\r\n    const btnMarkLearned = elem.querySelector(\'.btn-mark-learned\');\r\n    btnMarkLearned.addEventListener(\'click\', markLearned);\r\n    if (!isUserChapter) {\r\n        btnMarkDifficult.addEventListener(\'click\', markHard);\r\n    }\r\n}\r\nfunction getWordStatusControls(word) {\r\n    const { isUserChapter } = getState();\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'word-status-controls\';\r\n    const btnMarkLearned = `\n    <button class="btn btn-success btn-sm btn-mark-learned" data-id="${word.id}">\n      <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n      Learned\n    </button>\n  `;\r\n    const btnMarkhard = `\n    <button class="btn btn-danger btn-sm btn-mark-hard" data-id="${word.id}">\n      <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n      Hard\n    </button>\n  `;\r\n    elem.innerHTML = isUserChapter ? `${btnMarkLearned}` : `${btnMarkhard}${btnMarkLearned}`;\r\n    word_status_controls_handleEvents(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/study-book-word-card/study-book-word-card.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction study_book_word_card_handleEvents(elem, wordId) {\r\n    elem.addEventListener(\'updateWordCard\', async () => {\r\n        const word = await getWordWithUserData(wordId);\r\n        const newWordCard = getStudyBookWordCard(word);\r\n        elem.replaceWith(newWordCard);\r\n        newWordCard.dispatchEvent(new Event(\'updateChapterStatus\', { bubbles: true }));\r\n    });\r\n    elem.addEventListener(\'deleteWordCard\', () => {\r\n        elem.parentElement.remove();\r\n    });\r\n}\r\nfunction getStudyBookWordCard(word) {\r\n    const curAuth = getAuth();\r\n    const elem = document.createElement(\'article\');\r\n    elem.dataset.status = word.userWord.difficulty;\r\n    elem.className = \'word-card\';\r\n    elem.innerHTML = `\n    <div class="word-card__word-info">\n      <span class="word-card__word">${word.word}</span>\n      <span class="word-card__trancsription">${word.transcription}</span>\n      <span class="word-card__word-translate"> - ${word.wordTranslate}</span>\n    </div>\n    <div class="word-card__image">\n    <img src="${SOURCE}/${word.image}">\n    </div>\n    <div class="word-card__btn-container"></div>\n    <div class="word-card__meaning">\n      <div class="word-card__data-heading">Meaning:</div>\n      <div class="word-card__text">${word.textMeaning}</div>\n    </div>\n    <div class="word-card__text-translation">\n      <span class="word-card__text">(Translation): ${word.textMeaningTranslate}</span>\n    </div>\n    <div class="word-card__example">\n      <div class="word-card__data-heading">Example:</div>\n      <div class="word-card__text">${word.textExample}</div>\n    </div>\n    <div class="word-card__text-translation">\n      <span class="word-card__text">(Translation): ${word.textExampleTranslate}</span>\n    </div>\n  `;\r\n    const wordCardBtnContainer = elem.querySelector(\'.word-card__btn-container\');\r\n    wordCardBtnContainer.append(getWordAudio(word));\r\n    // If authorized\r\n    if (curAuth) {\r\n        wordCardBtnContainer.append(getWordStatusControls(word));\r\n        const statusBadge = getStatusBadge(word);\r\n        const wordStats = getWordStatistic(word);\r\n        statusBadge.classList.add(\'word-card__status-badge\');\r\n        wordStats.classList.add(\'word-card__word-stat-container\');\r\n        elem.prepend(statusBadge);\r\n        elem.prepend(wordStats);\r\n    }\r\n    study_book_word_card_handleEvents(elem, word.id);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/study-book-pagination/study-book-pagination.ts\n\r\n\r\nconst PAGE_LIMIT = 30;\r\nfunction setBtnPaginationStatus(elem) {\r\n    const curPage = getState().studyBookPage;\r\n    const prevBtn = elem.querySelector(\'.btn-pagination-prev\');\r\n    const nextBtn = elem.querySelector(\'.btn-pagination-next\');\r\n    prevBtn.disabled = curPage <= 0;\r\n    nextBtn.disabled = curPage >= PAGE_LIMIT - 1;\r\n}\r\nfunction study_book_pagination_handleEvents(elem) {\r\n    // Clink on the Buttons\r\n    elem.onclick = (e) => {\r\n        const target = e.target;\r\n        const curPage = getState().studyBookPage;\r\n        let newPage = curPage;\r\n        // Click Prev\r\n        if (target.classList.contains(\'btn-pagination-prev\')) {\r\n            newPage = curPage > 0 ? curPage - 1 : curPage;\r\n        }\r\n        // Click Next\r\n        if (target.classList.contains(\'btn-pagination-next\')) {\r\n            newPage = curPage < PAGE_LIMIT - 1 ? curPage + 1 : curPage;\r\n        }\r\n        if (newPage !== curPage) {\r\n            updateState(\'studyBookPage\', newPage);\r\n            elem.dispatchEvent(new Event(\'loadStudyBookChapter\', { bubbles: true }));\r\n        }\r\n    };\r\n    // Change page from select\r\n    elem.onchange = (e) => {\r\n        const target = e.target;\r\n        updateState(\'studyBookPage\', Number(target.value));\r\n        elem.dispatchEvent(new Event(\'loadStudyBookChapter\', { bubbles: true }));\r\n    };\r\n}\r\nfunction getStudyBookPagination() {\r\n    const curPage = getState().studyBookPage;\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'study-book-pagination\';\r\n    let pageSelectHTML = \'<select class="form-select study-book-pagination__cur-page">\';\r\n    for (let i = 0; i < PAGE_LIMIT; i += 1) {\r\n        const status = i === Number(curPage) ? \'selected\' : \'\';\r\n        pageSelectHTML += `<option value="${i}" ${status}>${i + 1}</option>`;\r\n    }\r\n    pageSelectHTML += \'</select>\';\r\n    elem.innerHTML = `\n    <button class="btn btn-secondary btn-pagination-prev">Prev</button>\n    ${pageSelectHTML}\n    <button class="btn btn-secondary btn-pagination-next">Next</button>\n  `;\r\n    setBtnPaginationStatus(elem);\r\n    study_book_pagination_handleEvents(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/study-book-words-list/study-book-words-list-html.ts\nconst registerToUseHTML = `\n  <p class="text-center">\n    Chapter 7 contains the most difficult words user selected manually.\n    Please, <a class="load-page-link" href="#login">Login</a>\n    or <a class="load-page-link" href="#register">Register</a>\n    to start using this chapter.\n  </p>\n`;\r\nconst emptyUserChapterHTML = `\n  <p class="text-center">\n    For now there is no words in this chapter. Mark words as <b>Hard</b> to add them into <b>Chapter 7 | User Words.</b>\n  </p>\n`;\r\n\n;// CONCATENATED MODULE: ./src/components/study-book-words-list/study-book-words-list.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction updateChapterInfo(wordsList) {\r\n    const { isUserChapter } = getState();\r\n    const wordsCards = wordsList.querySelectorAll(\'.word-card\');\r\n    if (!wordsCards.length && isUserChapter) {\r\n        const chapterInfo = wordsList.querySelector(\'.study-book-chapter-info\');\r\n        chapterInfo.innerHTML = emptyUserChapterHTML;\r\n    }\r\n}\r\nfunction updateChapterStatus(wordsList) {\r\n    const { isUserChapter } = getState();\r\n    const wordsCards = wordsList.querySelectorAll(\'.word-card\');\r\n    const badgesHard = wordsList.querySelectorAll(\'.status-badge--hard\');\r\n    const badgesLearned = wordsList.querySelectorAll(\'.status-badge--learned\');\r\n    const chapterStatus = wordsList.querySelector(\'.study-book-chapter-status\');\r\n    if (isUserChapter)\r\n        return;\r\n    if (badgesHard.length === wordsCards.length) {\r\n        wordsList.classList.add(\'study-book-words-list--hard\');\r\n        chapterStatus.textContent = `| ${"Hard list" /* ChapterStatus.HardList */}`;\r\n        return;\r\n    }\r\n    if (badgesLearned.length === wordsCards.length) {\r\n        wordsList.classList.add(\'study-book-words-list--learned\');\r\n        chapterStatus.textContent = `| ${"Learn Complete" /* ChapterStatus.LearnComplete */}`;\r\n        return;\r\n    }\r\n    chapterStatus.textContent = \'\';\r\n    wordsList.classList.remove(\'study-book-words-list--hard\');\r\n    wordsList.classList.remove(\'study-book-words-list--learned\');\r\n}\r\nfunction study_book_words_list_handleEvents(elem) {\r\n    elem.addEventListener(\'updateChapterStatus\', () => updateChapterStatus(elem));\r\n    elem.addEventListener(\'deleteWordCard\', () => updateChapterInfo(elem));\r\n}\r\nasync function getStudyBookWordsList() {\r\n    const curAuth = getAuth();\r\n    const { studyBookChapter, studyBookPage, isUserChapter } = getState();\r\n    const curChapter = Number(studyBookChapter) + 1;\r\n    const curPage = Number(studyBookPage) + 1;\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'study-book-words-list\';\r\n    const pageInfo = isUserChapter ? \'User Words\' : `Page ${curPage}`;\r\n    elem.innerHTML = `\n    <h2 class="study-book-chapter-heading">\n      Chapter ${curChapter} | ${pageInfo}\n      <span class="study-book-chapter-status"></span>\n    </h2>\n    <div class="study-book-chapter-info">\n      ${!curAuth && isUserChapter ? registerToUseHTML : \'\'}\n    </div>\n    <ol></ol>\n  `;\r\n    // Get apropriate set of words\r\n    const words = isUserChapter\r\n        ? await getAllUserWordsWithData()\r\n        : await getWordsWithUserData(studyBookChapter, studyBookPage);\r\n    // Fill words list with words\r\n    if (words.length) {\r\n        const list = elem.querySelector(\'ol\');\r\n        words.forEach((word) => {\r\n            const listItem = document.createElement(\'li\');\r\n            listItem.append(getStudyBookWordCard(word));\r\n            list.append(listItem);\r\n        });\r\n    }\r\n    // If current chapter is empty User Chapter and user is authorized\r\n    if (isUserChapter && !words.length && curAuth) {\r\n        const chapterInfo = elem.querySelector(\'.study-book-chapter-info\');\r\n        chapterInfo.innerHTML = emptyUserChapterHTML;\r\n    }\r\n    // Add pagination if current chapter is NOT User Chapter\r\n    if (!isUserChapter) {\r\n        elem.firstElementChild.after(getStudyBookPagination());\r\n        elem.append(getStudyBookPagination());\r\n    }\r\n    study_book_words_list_handleEvents(elem);\r\n    updateChapterStatus(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/study-book-chapters-menu/study-book-chapters-menu.ts\n\r\n\r\nfunction highlightActiveChapter(elem) {\r\n    const chapter = getState().studyBookChapter;\r\n    const activeChapter = elem.querySelector(`[data-chapter="${chapter}"]`);\r\n    if (activeChapter) {\r\n        activeChapter.disabled = true;\r\n    }\r\n}\r\nfunction study_book_chapters_menu_handleEvents(elem) {\r\n    elem.onclick = (e) => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        // Click on buttons\r\n        const btn = target.closest(\'.btn-select-chapter\');\r\n        if (btn) {\r\n            const chapter = btn.dataset.chapter;\r\n            updateState(\'studyBookChapter\', Number(chapter));\r\n            updateState(\'studyBookPage\', 0);\r\n            elem.dispatchEvent(new Event(\'loadStudyBookChapter\', { bubbles: true }));\r\n        }\r\n    };\r\n}\r\nfunction getStudyBookChaptersMenu() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'study-book-chapters-menu\';\r\n    elem.innerHTML = `\n    <h2>Chapters</h2>\n    <p>From Easy to most Hard<p>\n    <ol>\n      <li><button class="btn btn-primary btn-select-chapter" data-chapter="0">1</button></li>\n      <li><button class="btn btn-primary btn-select-chapter" data-chapter="1">2</button></li>\n      <li><button class="btn btn-primary btn-select-chapter" data-chapter="2">3</button></li>\n      <li><button class="btn btn-primary btn-select-chapter" data-chapter="3">4</button></li>\n      <li><button class="btn btn-primary btn-select-chapter" data-chapter="4">5</button></li>\n      <li><button class="btn btn-primary btn-select-chapter" data-chapter="5">6</button></li>\n      <li><button class="btn btn-danger btn-select-chapter" data-chapter="6">7</button></li>\n    </ol>\n  `;\r\n    highlightActiveChapter(elem);\r\n    study_book_chapters_menu_handleEvents(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/study-book-page/study-book-page.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction toggleMiniGameMenu(e) {\r\n    const elem = e.currentTarget;\r\n    const miniGameMenu = elem.querySelector(\'.mini-games-menu\');\r\n    const isLearned = isWordListLearned(elem);\r\n    miniGameMenu.hidden = isLearned;\r\n}\r\nfunction isWordListLearned(elem) {\r\n    const wordCards = elem.querySelectorAll(\'.word-card\');\r\n    const learnedBadges = elem.querySelectorAll(\'.status-badge--learned\');\r\n    return wordCards.length === learnedBadges.length;\r\n}\r\nfunction study_book_page_handleEvents(elem) {\r\n    // Change Chapter\r\n    elem.addEventListener(\'loadStudyBookChapter\', async () => {\r\n        elem.replaceWith(await getStudyBookPage());\r\n    });\r\n    // Update Chapter Status\r\n    elem.addEventListener(\'deleteWordCard\', toggleMiniGameMenu);\r\n    elem.addEventListener(\'updateChapterStatus\', toggleMiniGameMenu);\r\n}\r\nasync function getStudyBookPage() {\r\n    const curState = getState();\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = `study-book-page study-book-page--chapter-${Number(curState.studyBookChapter) + 1}`;\r\n    elem.innerHTML = `\n    <div class="container">\n      <h1 class="page-heading">\n        <span class="page-heading__rslang">RSLang</span> Study Book\n      </h1>\n      <div class="study-book-menus">\n        <div class="chapters-menu"></div>\n        <div class="mini-games-menu"></div>\n      </div>\n      <div class="words-list"></div>\n    </div>\n  `;\r\n    const chaptersMenu = elem.querySelector(\'.chapters-menu\');\r\n    const miniGamesMenu = elem.querySelector(\'.mini-games-menu\');\r\n    const wordsListContainer = elem.querySelector(\'.words-list\');\r\n    const miniGameMenu = getMiniGamesMenu();\r\n    showLoadSpinner(true);\r\n    const wordsList = await getStudyBookWordsList();\r\n    showLoadSpinner(false);\r\n    const isLearned = isWordListLearned(wordsList);\r\n    miniGameMenu.hidden = isLearned;\r\n    miniGamesMenu.replaceWith(miniGameMenu);\r\n    chaptersMenu.replaceWith(getStudyBookChaptersMenu());\r\n    wordsListContainer.replaceWith(wordsList);\r\n    elem.append(getFooter());\r\n    study_book_page_handleEvents(elem);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/about-team/about-team.ts\n\r\nfunction getAboutTeam() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'about-team\';\r\n    elem.innerHTML = `\n    <div class="container ">\n      <h1 class="page-heading">\n        <span class="page-heading__rslang">RSLang</span> Our Team\n      </h1>\n      <div class="team">\n        <div class="team__card">\n          <div class="team__card-img img-jeneko"></div>\n          <div class="team__card-about">\n            <h2 class="team__card-about-name">Evgeniy Kozlov</h2>\n            <p class="team__card-about-specialty">Team leader, Frontend developer</p>\n            <p class="team__card-about-progress">Did basic project settings, user authorization, TextBook, saving and getting statistic logic, statistic charts</p>\n            <a href="https://github.com/Jeneko" target="_blank" class="team__card-about-git"></a>\n          </div>\n        </div>\n        <div class="team__card team__card-second">\n          <div class="team__card-img img-dima"></div>\n          <div class="team__card-about">\n            <h2 class="team__card-about-name">Dmitry Kaliasinski</h2>\n            <p class="team__card-about-specialty">Frontend developer</p>\n            <p class="team__card-about-progress">Implemented Sprint game, team page, footer and project video presentation</p>\n            <a href="https://github.com/dmitrykaliasinski" target="_blank" class="team__card-about-git"></a>\n          </div>\n        </div>\n        <div class="team__card">\n          <div class="team__card-img img-artem"></div>\n          <div class="team__card-about">\n            <h2 class="team__card-about-name">Artem Dubovov</h2>\n            <p class="team__card-about-specialty">Frontend developer</p>\n            <p class="team__card-about-progress">Implemented AudioCall game, main page, statistic page</p>\n            <a href="https://github.com/ArtemDubovov" target="_blank" class="team__card-about-git"></a>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/team-page/team-page.ts\n\r\n\r\nfunction getTeamPage() {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'team-page\';\r\n    elem.append(getAboutTeam());\r\n    elem.append(getFooter());\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/statistics-info/statistics-info-for-the-day.ts\n\r\n\r\nvar HeaderName;\r\n(function (HeaderName) {\r\n    HeaderName["WordsStatistics"] = "Words statistics";\r\n    HeaderName["AudioCall"] = "Audio-call";\r\n    HeaderName["Sprint"] = "Sprint";\r\n})(HeaderName || (HeaderName = {}));\r\nvar TitlesStatus;\r\n(function (TitlesStatus) {\r\n    TitlesStatus["CardStatisticsWords"] = "card-statistics-words";\r\n    TitlesStatus["CardStatisticsAudio"] = "card-statistics-audiocall";\r\n    TitlesStatus["CardStatisticsSprint"] = "card-statistics-sprint";\r\n})(TitlesStatus || (TitlesStatus = {}));\r\nvar FiledValueCard;\r\n(function (FiledValueCard) {\r\n    FiledValueCard["LearnedWords"] = "Learned words";\r\n    FiledValueCard["LongestSeries"] = "Longest series";\r\n})(FiledValueCard || (FiledValueCard = {}));\r\nasync function getStatPage(respStatistics) {\r\n    const page = document.createElement(\'div\');\r\n    page.classList.add(\'container\', \'statistics-window\');\r\n    page.innerHTML = `\n    <h1 class="page-heading"><span class="page-heading__rslang">RSLang</span> Statistics</h1>\n  `;\r\n    const windowsStatistics = await getWindowsStatistics(respStatistics);\r\n    page.append(windowsStatistics);\r\n    return page;\r\n}\r\nasync function getWindowsStatistics(respStatistics) {\r\n    const statistic = getObjectStatistic(respStatistics);\r\n    const windowsStatistics = getCards(statistic, respStatistics.learnedWords);\r\n    windowsStatistics.classList.add(\'statistics-block\');\r\n    const cardWords = windowsStatistics.querySelector(\'.card-statistics-words\');\r\n    const cardAudioCall = windowsStatistics.querySelector(\'.card-statistics-audiocall\');\r\n    const cardSprint = windowsStatistics.querySelector(\'.card-statistics-sprint\');\r\n    handleEventPaginationButtons(statistic.allStatWords, cardWords, StatusCardStatistics.Word);\r\n    handleEventPaginationButtons(statistic.allStatAudiocall, cardAudioCall, StatusCardStatistics.Game);\r\n    handleEventPaginationButtons(statistic.allStatSprint, cardSprint, StatusCardStatistics.Game);\r\n    return windowsStatistics;\r\n}\r\nfunction convertTimestampToDateStr(ms) {\r\n    const date = new Date(ms);\r\n    return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`;\r\n}\r\nfunction handleEventPaginationButtons(allStatObject, cardBody, key) {\r\n    const buttonLeft = cardBody.querySelector(\'.button-left\');\r\n    const buttonRight = cardBody.querySelector(\'.button-right\');\r\n    const dataTable = cardBody.querySelector(\'.card-statistics-date\');\r\n    const learnWords = cardBody.querySelector(\'.game-statistic-info-learned\') || cardBody.querySelector(\'.game-statistic-info-longest-row\');\r\n    const newWords = cardBody.querySelector(\'.game-statistic-info-new-words\');\r\n    const rightAnswers = cardBody.querySelector(\'.game-statistic-info-right-answers\');\r\n    if (allStatObject.length <= 1) {\r\n        buttonLeft.setAttribute(\'disabled\', \'true\');\r\n    }\r\n    buttonLeft.addEventListener(\'click\', () => eventButtonPagination(false, allStatObject, dataTable, key, learnWords, newWords, rightAnswers, buttonRight, buttonLeft));\r\n    buttonRight.addEventListener(\'click\', () => eventButtonPagination(true, allStatObject, dataTable, key, learnWords, newWords, rightAnswers, buttonRight, buttonLeft));\r\n}\r\nfunction eventButtonPagination(flag, allStatObject, dataTable, key, learnWords, newWords, rightAnswers, buttonRight, buttonLeft) {\r\n    const lengthDate = allStatObject.length;\r\n    const currentDateIndex = dataTable.dataset.dateindex;\r\n    const newIndex = flag ? +(currentDateIndex) + 1 : +(currentDateIndex) - 1;\r\n    const currentNewWords = (allStatObject[newIndex].newWordsQty).toString();\r\n    const currentRightAnswers = (allStatObject[newIndex].rightAnswers).toString();\r\n    if (key === StatusCardStatistics.Game) {\r\n        const longestSeries = allStatObject[newIndex].longestRow.toString();\r\n        const { wrongAnswers } = allStatObject[newIndex];\r\n        const percentCorrectAnswers = getPercentage(currentRightAnswers, wrongAnswers);\r\n        rightAnswers.textContent = percentCorrectAnswers.toString();\r\n        learnWords.textContent = longestSeries;\r\n        newWords.textContent = currentNewWords;\r\n    }\r\n    if (key === StatusCardStatistics.Word) {\r\n        const correctAnswers = allStatObject[newIndex].rightAnswers;\r\n        const { wrongAnswers } = allStatObject[newIndex];\r\n        const learnWordsAmount = allStatObject[newIndex].learnedWordsQty.toString();\r\n        const currentLearn = getPercentage(correctAnswers, wrongAnswers).toString();\r\n        rightAnswers.textContent = currentLearn;\r\n        learnWords.textContent = learnWordsAmount;\r\n        newWords.textContent = currentNewWords;\r\n    }\r\n    dataTable.dataset.dateindex = newIndex.toString();\r\n    dataTable.innerHTML = `${convertTimestampToDateStr(allStatObject[newIndex].date)}`;\r\n    if (flag) {\r\n        if (newIndex === lengthDate - 1) {\r\n            buttonRight.setAttribute(\'disabled\', \'true\');\r\n        }\r\n        if (newIndex > 0) {\r\n            buttonLeft.removeAttribute(\'disabled\');\r\n        }\r\n    }\r\n    else {\r\n        if (newIndex !== allStatObject.length - 1) {\r\n            buttonRight.removeAttribute(\'disabled\');\r\n        }\r\n        if (newIndex < 1) {\r\n            buttonLeft.setAttribute(\'disabled\', \'true\');\r\n        }\r\n    }\r\n}\r\nfunction getPercentage(correct, wrong) {\r\n    const sum = +correct + +wrong;\r\n    return sum ? Math.trunc((+correct / sum) * 100) : 0;\r\n}\r\nfunction getObjectStatistic(respStatistics) {\r\n    const statisticsForTodayWords = getTodayStat(respStatistics, \'words\');\r\n    const statisticsForTodaySprint = getTodayStat(respStatistics, \'sprint\');\r\n    const statisticsForTodayAudioCall = getTodayStat(respStatistics, \'audiocall\');\r\n    const objStatistic = {\r\n        allStatAudiocall: respStatistics.optional.audiocall.stat,\r\n        allStatSprint: respStatistics.optional.sprint.stat,\r\n        allStatWords: respStatistics.optional.words.stat,\r\n        lengthAudiocall: respStatistics.optional.audiocall.stat.length,\r\n        lengthSprint: respStatistics.optional.sprint.stat.length,\r\n        lengthWords: respStatistics.optional.words.stat.length,\r\n        wordsLearned: statisticsForTodayWords.learnedWordsQty,\r\n        wordsNew: statisticsForTodayWords.newWordsQty,\r\n        wordsRightAnswers: statisticsForTodayWords.rightAnswers,\r\n        wordsPercentRightAnswers: getPercentage(statisticsForTodayWords.rightAnswers, statisticsForTodayWords.wrongAnswers),\r\n        audiocallRightAnswers: statisticsForTodayAudioCall.rightAnswers,\r\n        audiocallLongestRow: statisticsForTodayAudioCall.longestRow,\r\n        audiocallNewWords: statisticsForTodayAudioCall.newWordsQty,\r\n        audiocallWrongAnswers: statisticsForTodayAudioCall.wrongAnswers,\r\n        audiocallPercentRightAnswers: getPercentage(statisticsForTodayAudioCall.rightAnswers, statisticsForTodayAudioCall.wrongAnswers),\r\n        sprintRightAnswers: statisticsForTodaySprint.rightAnswers,\r\n        sprintLongestRow: statisticsForTodaySprint.longestRow,\r\n        sprintNewWords: statisticsForTodaySprint.newWordsQty,\r\n        sprintWrongAnswers: statisticsForTodaySprint.wrongAnswers,\r\n        sprintPercentRightAnswers: getPercentage(statisticsForTodaySprint.rightAnswers, statisticsForTodaySprint.wrongAnswers),\r\n    };\r\n    return objStatistic;\r\n}\r\nfunction getCards(respStatistics, learnedWords) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.innerHTML = `\n    <h2 class="statistics-title display-2">Statistics for words</h2>\n      <div class="statistic-info-wrapper">\n        <p class="statistic-info-of-day display-3">${learnedWords}</p>\n        <h5 class="card-title display-5">\n          Words learned\n        </h5>\n      </div>\n    <h2 class="statistics-title display-2">Statistics for the day</h2>\n  `;\r\n    elem.classList.add(\'row\', \'gy-4\');\r\n    const wordsLength = respStatistics.allStatWords.length;\r\n    const audioLength = respStatistics.allStatAudiocall.length;\r\n    const sprintLength = respStatistics.allStatSprint.length;\r\n    const words = respStatistics.allStatWords[wordsLength - 1];\r\n    const audiocall = respStatistics.allStatAudiocall[audioLength - 1];\r\n    const sprint = respStatistics.allStatSprint[sprintLength - 1];\r\n    elem.append(getCard(words.newWordsQty, getPercentage(words.rightAnswers, words.wrongAnswers), words.learnedWordsQty, convertTimestampToDateStr(words.date), wordsLength, TitlesStatus.CardStatisticsWords, HeaderName.WordsStatistics, FiledValueCard.LearnedWords));\r\n    elem.append(getCard(audiocall.newWordsQty, getPercentage(audiocall.rightAnswers, audiocall.wrongAnswers), audiocall.longestRow, convertTimestampToDateStr(audiocall.date), audioLength, TitlesStatus.CardStatisticsAudio, HeaderName.AudioCall, FiledValueCard.LongestSeries));\r\n    elem.append(getCard(sprint.newWordsQty, getPercentage(sprint.rightAnswers, sprint.wrongAnswers), sprint.longestRow, convertTimestampToDateStr(sprint.date), sprintLength, TitlesStatus.CardStatisticsSprint, HeaderName.Sprint, FiledValueCard.LongestSeries));\r\n    return elem;\r\n}\r\nfunction getCard(newWords, wordsPercentRightAnswers, wordsLearnedOrLongestRow, date, length, titleClass, title, fieldValue) {\r\n    const card = document.createElement(\'div\');\r\n    card.classList.add(\'col-12\', \'col-md-6\', \'col-lg-4\', \'statistic-block\');\r\n    card.innerHTML = `\n    <div class="card card-statistics ${titleClass}">\n      <div class="card-body">\n        <h5 class="card-title card-title-statistics display-6">\n          ${title}\n        </h5>\n        <div class="card-text-wrapper">\n          <table class="statistic-table">\n            <tr>\n              <td class="statistic-td"><p class="card-text card-text-statistics">New words</p></td>\n              <td class="statistic-td statistic-td-amount statistic-td-amount-second"><span class="game-statistic-first game-statistic-info game-statistic-info-new-words ">${newWords}</span></td>\n            </tr>\n            <tr>\n              <td class="statistic-td"><p class="card-text card-text-statistics">Right answers (%)</p></td>\n              <td class="statistic-td statistic-td-amount statistic-td-amount-third"><span class="game-statistic-second game-statistic-info game-statistic-info-right-answers">${wordsPercentRightAnswers}</span></td>\n            </tr>\n            <tr>\n              <td class="statistic-td"><p class="card-text card-text-statistics">${fieldValue}</p></td>\n              <td class="statistic-td statistic-td-amount statistic-td-amount-first"><span class="game-statistic-third game-statistic-info card-text game-statistic-info-learned">${wordsLearnedOrLongestRow}</span></td>\n            </tr>\n          </table>\n          <div class="statistics-card-pagination d-flex justify-content-center align-items-center">\n            <button type="button" class="btn btn-primary btn-sm button-left"><</button>\n              <span data-dateindex="${length - 1}" class="card-statistics-date">${date}</span>\n            <button disabled type="button" class="btn btn-primary btn-sm button-right">></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\r\n    return card;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/statistic-chart/statistic-chart.ts\n\r\nconst INFO_TEXT = \'Choose column to&nbsp;see&nbsp;info\';\r\nconst NO_STAT_TO_SHOW = \'No&nbsp;stat to&nbsp;show yet\';\r\nconst MIN_COLUMN_QTY = 3;\r\nvar ChartType;\r\n(function (ChartType) {\r\n    ChartType["NewWords"] = "New";\r\n    ChartType["LearnedWords"] = "Learned";\r\n})(ChartType || (ChartType = {}));\r\nfunction getArrayOfPercsOfMax(array) {\r\n    const maxValue = Math.max(...array) || 100;\r\n    return array.map((el) => (el * 100) / maxValue);\r\n}\r\nfunction getFormattedDateFromTimestamp(timestamp) {\r\n    const date = new Date(timestamp);\r\n    return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`;\r\n}\r\nfunction getChart(chartData) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'chart\';\r\n    // Convert chart data to percent values\r\n    const chartDataPerc = getArrayOfPercsOfMax(chartData.map((el) => el.value));\r\n    // Add columns to the chart\r\n    if (chartDataPerc.length === 1 && chartDataPerc[0] !== 0) {\r\n        chartDataPerc[0] = 50;\r\n    }\r\n    chartDataPerc.forEach((value, i) => {\r\n        elem.innerHTML += `\n      <div class="chart__column" style="height: ${value}%;" data-value="${chartData[i].value}" data-timestamp="${chartData[i].timeStamp}"></div>\n    `;\r\n    });\r\n    // Add empty element at the end of short charts to make them look nice\r\n    if (chartData.length < MIN_COLUMN_QTY) {\r\n        elem.innerHTML += \'<div class="chart__column chart__column--additional" style="height: 0;"></div>\';\r\n    }\r\n    return elem;\r\n}\r\nfunction toggleChartColumnInfo(e) {\r\n    const elem = e.currentTarget;\r\n    const infoTextElem = elem.querySelector(\'.statistic-chart__info-text\');\r\n    const target = e.target;\r\n    const infoText = target.classList.contains(\'chart__column\')\r\n        ? `Words:&nbsp;${target.dataset.value} | Date:&nbsp;${getFormattedDateFromTimestamp(Number(target.dataset.timestamp))}`\r\n        : INFO_TEXT;\r\n    infoTextElem.innerHTML = infoText;\r\n}\r\nfunction statistic_chart_handleEvents(elem) {\r\n    const infoTextElem = elem.querySelector(\'.statistic-chart__info-text\');\r\n    elem.addEventListener(\'click\', toggleChartColumnInfo);\r\n    elem.addEventListener(\'mouseover\', toggleChartColumnInfo);\r\n    elem.addEventListener(\'mouseleave\', () => { infoTextElem.innerHTML = INFO_TEXT; });\r\n}\r\nasync function getStatisticChart(stat, chartType) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.className = \'statistic-chart\';\r\n    const wordsStat = stat.optional.words.stat;\r\n    const getChartData = {\r\n        [ChartType.NewWords]: () => wordsStat.map((day) => ({ value: day.newWordsQty, timeStamp: day.date })),\r\n        [ChartType.LearnedWords]: () => wordsStat.map((day) => ({ value: day.learnedWordsQty, timeStamp: day.date })),\r\n    };\r\n    const chartData = getChartData[chartType]();\r\n    elem.innerHTML = `\n    <h2 class="statistic-chart__heading">Words | ${chartType}</h2>\n    <div class="statistic-chart__info">\n      <span class="statistic-chart__info-text">${chartData.length ? INFO_TEXT : NO_STAT_TO_SHOW}</span>\n    </div>\n  `;\r\n    if (chartData.length) {\r\n        statistic_chart_handleEvents(elem);\r\n        elem.append(getChart(chartData));\r\n    }\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/statistics-info/statistics-info-all-days.ts\n\r\nasync function getStatisticInfoAllDays(statistic) {\r\n    const elem = document.createElement(\'div\');\r\n    elem.classList.add(\'container\', \'statistics-window\', \'statistics-section-for-all-time\');\r\n    const row = document.createElement(\'div\');\r\n    const tableNew = document.createElement(\'div\');\r\n    const tableLearned = document.createElement(\'div\');\r\n    row.classList.add(\'row\', \'gy-4\');\r\n    elem.innerHTML = `\n    <h2 class="statistics-title display-2">All time statistic</h2>\n  `;\r\n    elem.classList.add(\'container\', \'statistics-window\');\r\n    const newWords = await getStatisticChart(statistic, ChartType.NewWords);\r\n    const learnWords = await getStatisticChart(statistic, ChartType.LearnedWords);\r\n    tableNew.classList.add(\'col\', \'col-lg-6\', \'col-12\');\r\n    tableLearned.classList.add(\'col\', \'col-lg-6\', \'col-12\');\r\n    tableNew.append(newWords);\r\n    tableLearned.append(learnWords);\r\n    row.append(tableNew);\r\n    row.append(tableLearned);\r\n    elem.append(row);\r\n    return elem;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/statistics-page/statistics-page.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function getStatisticsPage() {\r\n    if (!getAuth()) {\r\n        return noAuthUser();\r\n    }\r\n    const respStatistics = await getUserStatistic();\r\n    const elem = document.createElement(\'div\');\r\n    showLoadSpinner(true);\r\n    elem.append(await getStatPage(respStatistics));\r\n    elem.append(await getStatisticInfoAllDays(respStatistics));\r\n    elem.append(getFooter());\r\n    elem.classList.add(\'statistics-page\');\r\n    showLoadSpinner(false);\r\n    return elem;\r\n}\r\nfunction noAuthUser() {\r\n    const wrapper = document.createElement(\'div\');\r\n    wrapper.classList.add(\'container\', \'statistic-no-auth\');\r\n    const noAuthWindow = document.createElement(\'div\');\r\n    wrapper.innerHTML = `\n    <h1 class="page-heading">\n      <span class="page-heading__rslang">RSLang</span> Statistic\n    </h1>\n    <p class="statistics-no-auth-user-info">Please, <a href="#login" class="load-page-link">Login</a> or <a href="#register" class="load-page-link">Register</a> to start using statistics.</p>\n  `;\r\n    noAuthWindow.append(wrapper);\r\n    noAuthWindow.append(getFooter());\r\n    return noAuthWindow;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/app/app.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction handleLinks(e) {\r\n    const target = e.target;\r\n    const loadPageLink = target.closest(\'.load-page-link\');\r\n    if (loadPageLink) {\r\n        e.preventDefault();\r\n        const href = loadPageLink.getAttribute(\'href\');\r\n        updateState(\'page\', href.slice(1));\r\n        loadPage();\r\n    }\r\n}\r\nasync function loadPage() {\r\n    const curPage = getState().page;\r\n    const getPage = {\r\n        [PageName.main]: () => Promise.resolve(getMainPage()),\r\n        [PageName.studyBook]: () => getStudyBookPage(),\r\n        [PageName.audioCall]: () => getAudioCallPage(),\r\n        [PageName.sprint]: () => getSprintPage(),\r\n        [PageName.stats]: () => Promise.resolve(getMainPage()),\r\n        [PageName.team]: () => Promise.resolve(getTeamPage()),\r\n        [PageName.register]: () => Promise.resolve(register_page_getRegisterPage()),\r\n        [PageName.login]: () => Promise.resolve(getRegisterPage()),\r\n        [PageName.statistics]: () => Promise.resolve(getStatisticsPage()),\r\n    };\r\n    const fragment = new DocumentFragment();\r\n    fragment.append(getHeader());\r\n    fragment.append(await getPage[curPage]());\r\n    document.body.innerHTML = \'\';\r\n    document.body.append(fragment);\r\n}\r\nfunction app_handleEvents() {\r\n    // Load page\r\n    document.addEventListener(\'loadPage\', loadPage);\r\n    // Auth update\r\n    document.addEventListener(\'authUpdate\', loadPage);\r\n    // Click on links\r\n    document.addEventListener(\'click\', handleLinks);\r\n}\r\nfunction startApp() {\r\n    loadPage();\r\n    app_handleEvents();\r\n}\r\n\n;// CONCATENATED MODULE: ./src/index.ts\n\r\n\r\n\r\n\r\nstartApp();\r\n\n\n//# sourceURL=webpack://team-51-rslang/./src/index.ts_+_56_modules?')}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var t=__webpack_require__.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})();var __webpack_exports__=__webpack_require__(402)})();